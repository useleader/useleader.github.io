<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>WarmFire</title>
    <link>http://www.warmfire.com/</link>
    
    <atom:link href="http://www.warmfire.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description></description>
    <pubDate>Wed, 04 Oct 2023 13:09:54 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>淑芬第五周学习日志</title>
      <link>http://www.warmfire.com/2023/10/04/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%BA%94%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/04/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%BA%94%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Wed, 04 Oct 2023 13:09:30 GMT</pubDate>
      
      
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6/">数学</category>
      
      
      
      <comments>http://www.warmfire.com/2023/10/04/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%BA%94%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>安全协议第五周学习日志</title>
      <link>http://www.warmfire.com/2023/10/04/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E4%BA%94%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/04/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E4%BA%94%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Wed, 04 Oct 2023 13:05:33 GMT</pubDate>
      
      
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE/">安全协议</category>
      
      
      
      <comments>http://www.warmfire.com/2023/10/04/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E4%BA%94%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>图像处理与信息隐藏第四周学习日志</title>
      <link>http://www.warmfire.com/2023/10/03/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/03/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Tue, 03 Oct 2023 07:43:25 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;2-图像信息的基本知识&quot;&gt;2 图像信息的基本知识&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;22-图像数字化&quot;&gt;2.2 图像数字化&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;图像数字化：将代表图像的连续信号转变为离散信号&lt;/p&gt;
&lt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>[TOC]</p><h1><span id="2-图像信息的基本知识">2 图像信息的基本知识</span></h1><h2><span id="22-图像数字化">2.2 图像数字化</span></h2><p>图像数字化：将代表图像的连续信号转变为离散信号</p><p><strong>采样</strong>：图像在空间上的离散化</p><p><strong>量化</strong>：对样点灰度值的离散化过程。</p><p>为了适应数字计算机的处理，必须对连续图像函数进行<strong>空间和幅值</strong>数字化</p><p><strong>均匀量化</strong>：将样本连续灰度值等间隔分层量化方式</p><p><strong>非均匀量化</strong>：不等间隔分层量化方式</p><p><strong>量化误差</strong>：以有限个离散值来近似表示无限多个连续值，量化器输出与输入之间必然存在误差</p><p>量化分层越多，量化误差越小，但编码时占用比特数越多</p><p>按人的视觉特点的非均匀量化</p><h2><span id="23-图像的噪声分析">2.3 图像的噪声分析</span></h2><h3><span id="231-噪声">2.3.1 噪声</span></h3><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/噪声.png" alt="img1"></p><p>高斯噪声是应用最广的噪声模型</p><h3><span id="232-图像噪声的分类">2.3.2 图像噪声的分类</span></h3><p>根据噪声的产生原因</p><ul><li>外部噪声</li><li>内部噪声</li></ul><p>根据统计理论观点</p><ul><li>平稳噪声：不随时间变化</li><li>非平稳噪声：随</li></ul><p>根据噪声幅度分布</p><ul><li>高斯噪声</li><li>瑞利噪声</li><li>伽马噪声</li></ul><p>根据频谱形状</p><ul><li>白噪声：频谱均匀分布</li><li>1/f噪声：频谱与频率成分反比</li><li>三角噪声：与频率平方成正比的噪声</li></ul><p>根据噪声与图像的结合方式</p><ul><li>加性噪声：输出图像为S(t)+n(t)</li><li>乘性噪声：S(t)(1+n(t))</li></ul><p>为了分析处理方便，</p><ol><li>往往将乘性噪声近似认为是加性噪声</li><li>信号和噪声是互相统计独立的</li></ol><h2><span id="24-图像质量评价">2.4 图像质量评价</span></h2><h3><span id="241-概述">2.4.1 概述</span></h3><p>图像质量评价的主要方法：</p><ul><li>客观评价方法<ul><li>实现容易</li><li>可消除不确定行</li><li>不一定反应真实质量</li></ul></li><li>主观评价方法<ul><li>实现困难</li><li>受其他因素影响大</li><li>像评估的最终目标</li></ul></li></ul><h3><span id="242-图像质量的主观评价">2.4.2 图像质量的主观评价</span></h3><p>主观评价方法：</p><ol><li>由ITU制定了图像主观评价的标准</li><li>至少挑选10观察者</li><li>测试条件应尽可能与使用条件相匹配</li><li>调查</li><li>设计评分表</li><li>结果分析，MOS Mean Option Score， DMOS Differential Mean Option Score</li></ol><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/DMOS.png" alt="img2"></p><p>DMOS值越大说明视频越好</p><p><strong>灰度图像的失真度量</strong></p><ol><li><p>归一化的均方误差</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/NMSE.png" alt="img3"></p></li><li><p>峰值均方误差</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/PMSE.png" alt="img4"></p></li><li><p>等效的峰值信噪比</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/PSNR.png" alt="img5"></p></li></ol><h3><span id="243-图像保真度的测量">2.4.3 图像保真度的测量</span></h3><p>保真度并与一定能够反应图像主观质量</p><p><strong>亮度的量度</strong></p><p>人的感觉亮度和亮度y基本称对数关系</p><script type="math/tex; mode=display">\Delta(L_1,L_2) = \log_B{(y+\Delta y)} - \log_B(y)</script><p><strong>彩色的量度</strong></p><p>人的彩色感觉：红、绿、蓝</p><ul><li>RGB模式：加式模式</li><li>CMYK模式：印刷彩色，减式模式，反射光</li></ul><h2><span id="25-彩色图像基本知识">2.5 彩色图像基本知识</span></h2><ol><li><p>YIQ</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/YIQ.png" alt="img6"></p></li><li><p>YUV</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/YUV.png" alt="img7"></p></li><li><p>YCbCr</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/YCbCr.png" alt="img8"></p></li></ol>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/">图像处理</category>
      
      
      
      <comments>http://www.warmfire.com/2023/10/03/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库第四周学习日志</title>
      <link>http://www.warmfire.com/2023/09/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/09/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Sat, 30 Sep 2023 14:31:06 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;&lt;span id=&quot;第二章-关系数据库&quot;&gt;第二章 关系数据库&lt;/span&gt;&lt;/h1&gt;&lt;h2&gt;&lt;span id=&quot;21-关系数据结构及形式化定义&quot;&gt;2.1 关系数据结构及形式化定义&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span id=&quot;211-关系&quot;&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<p>[TOC]</p><h1><span id="第二章-关系数据库">第二章 关系数据库</span></h1><h2><span id="21-关系数据结构及形式化定义">2.1 关系数据结构及形式化定义</span></h2><h3><span id="211-关系">2.1.1 关系</span></h3><p>单一的数据结构——关系</p><p>现实世界的<strong>实体以及实体间的各种联系</strong>均用关系来表示</p><p>关系的组成：同一类实体型的实例集合</p><p>关系之间的联系：实体与实体之间、实体的属性之间存在某种关联关系</p>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      
      <comments>http://www.warmfire.com/2023/09/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>网络安全创新实验学习日志</title>
      <link>http://www.warmfire.com/2023/09/29/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%88%9B%E6%96%B0%E5%AE%9E%E9%AA%8C%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/09/29/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%88%9B%E6%96%B0%E5%AE%9E%E9%AA%8C%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Fri, 29 Sep 2023 14:10:40 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;目前来看网络安全创新实验中给出的例子还是很不错的，既能够初步明白怎么用，还能在具体的应用环境中实现。-20230929&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;span id=&quot;lab-2&quot;&gt;Lab-2&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;spa</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>目前来看网络安全创新实验中给出的例子还是很不错的，既能够初步明白怎么用，还能在具体的应用环境中实现。-20230929</p></blockquote><h2><span id="lab-2">Lab-2</span></h2><h3><span id="44-md5算法碰撞实验">4.4 MD5算法碰撞实验</span></h3><h4><span id="441-md5碰撞工具的使用">4.4.1 MD5碰撞工具的使用</span></h4><p>快速MD5碰撞生成工具来生成两个拥有相同MD5值的不同文件。这两个文件的开始部分是相同的。因此需要指定前缀：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Lab2/hashclash/ipc_workdir/</span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;prefix&quot;</span> &gt; [prefix_file]</span><br><span class="line">../scripts/poc_no.sh [prefix_file]</span><br></pre></td></tr></table></figure><p>可以通过一下命令来验证文件是否内容不同而MD5值相同。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 比较两个文件是否相同</span><br><span class="line">diff -q collision1.bin collision2.bin</span><br><span class="line">ghex -C collision1.bin</span><br><span class="line"><span class="built_in">md5sum</span> collision1.bin collision2.bin</span><br></pre></td></tr></table></figure><p>如果是64字节的倍数，则会正常处理；如果不是64的倍数，则会去除多余的部分。</p><h4><span id="442-md5特性探究">4.4.2 MD5特性探究</span></h4><p>两个相同MD5值的文件加上相同的后缀T会生成两个具有相同哈希值的文件。</p><blockquote><p>cat file1 file2 &gt; file3</p></blockquote><p>将两个文件合并到另一个文件</p><h4><span id="443-产生相同md5哈希值的两个可执行文件">4.4.3 产生相同MD5哈希值的两个可执行文件</span></h4><p>利用gcc编译文件的命令如下：</p><blockquote><p>gcc [input_file] -o [output_file]</p></blockquote><p>编译后的文件可以直接运行</p><blockquote><p>./program.out</p></blockquote><p>赋予执行权限</p><blockquote><p>chmod +x [file_name]</p></blockquote><p>验证是否满足要求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">md5sum</span> program_col1.bin program_col2.bin</span><br><span class="line"><span class="built_in">echo</span> $(./program_col1.bin) | <span class="built_in">md5sum</span></span><br><span class="line"><span class="built_in">echo</span> $(./program_col2.bin) | <span class="built_in">md5sum</span></span><br></pre></td></tr></table></figure><p>接下来用head/tail命令来分割文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 将a.out前3200byte输入到prefix文件中</span><br><span class="line"><span class="built_in">head</span> -c 3200 a.out &gt; prefix</span><br><span class="line">// a.out 后 100字节输入到suffix</span><br><span class="line"><span class="built_in">tail</span> -c 100 a.out &gt; suffix</span><br><span class="line">// a.out 从第3300字节开始至结尾的内容输入到suffix文件中</span><br><span class="line"><span class="built_in">tail</span> -c +3300 a.out &gt; suffix</span><br></pre></td></tr></table></figure><h2><span id="lab-3">Lab-3</span></h2><h3><span id="43-pki实验">4.3 PKI实验</span></h3><p>PKI利用CA将用户身份与公钥结合，解决公钥可信性问题。</p><p>CA是一个签发电子证书的可信实体。</p><h4><span id="431-建立ca">4.3.1 建立CA</span></h4><p>将<code>openssl</code>提供的配置文件<code>/usr/lib/ssl/openssl.cnf</code>拷贝进入目录，并且根据配置文件中的要求（[CA_default]）创建以下文件夹或文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dir =./demoCA# dir, store all files</span><br><span class="line">certs=$dir/certs    # dir, store all certs</span><br><span class="line">crl_dir    =$dir/crl    # dir, store the list of revocation key list</span><br><span class="line">new_certs_dir    =$dir/newcerts #dir, store new certs</span><br><span class="line">database =$dir/index.txt  #file, the index file of database</span><br><span class="line">serial   =$dir/serial   #file, store relevant serial number</span><br></pre></td></tr></table></figure><p>其中，<code>index.txt</code>仅需创建一个空文件，<code>serial</code>文件创建后需要输入偶数位的16进制数字</p><p>之后CA先生成自签名证书，该证书证明CA是可信的，并称为根证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># openssl req生成自签名证书</span></span><br><span class="line">openssl req -new -x509 -keyout ca.key -out ca.crt -config openssl.cnf</span><br><span class="line"><span class="comment"># -new 创建一个证书请求文件，若之后指定了-x509，代表创建自签名证书文件</span></span><br><span class="line"><span class="comment"># -keyout [file]  指定自动创建私钥时私钥的输出文件</span></span><br><span class="line"><span class="comment"># -out [file] 指定证书请求或自签名证书的输出文件</span></span><br><span class="line"><span class="comment"># config [file]  指定req命令的配置文件</span></span><br></pre></td></tr></table></figure><blockquote><p>自签名 SSL 证书是一种数字证书，未经公开信任的证书颁发机构 (CA) 签名。自签名证书被认为不同于传统的 CA 签名证书，因为它们是由负责与证书关联的网站或软件的公司或开发人员创建、颁发和签名的，而不是 CA。</p><p>在高层次上，这些自签名证书基于与 X.509 证书中使用的相同的加密私钥和公钥对体系结构。但是，这些数字证书没有受信任的第三方 CA 的验证。发行过程中缺乏独立验证会产生额外的风险，这就是自签名证书的问题。对于面向公众的网站和应用程序，它们被认为是不安全的。</p></blockquote><p>可以用 <code>openssl x509 -noout -text -in ca.crt</code>来查看证书信息</p><h4><span id="432-利用ca签发证书">4.3.2 利用CA签发证书</span></h4><p>网站PKILab.com，需要从CA处取得电子证书：</p><p>首先，生成自己的公私钥对 <code>openssl genrsa -aes128 -out server.key 2048</code></p><p>生成公私钥对后，同时将私钥用AES128加密存储在<code>server.key</code>文件中。</p><p>通过 <code>openssl rsa -in server.key -text</code>查看密钥信息</p><p>其次，PKILab.com需要生成证书请求文件（CSR）。该文件包含了PKILab.com的公钥，并被发送给CA，请求CA对公钥进行签名：</p><p><code>openssl req -new -key server.key -out server.csr -config openssl.cnf</code></p><p>CA收到csr请求文件后，利用自己的私钥ca.key与证书ca.crt，签名并生成server.crt:</p><p><code>openssl ca -in server.csr -out server.crt -cert ca.crt -keyfile ca.key -config openssl.cnf</code></p><h4><span id="433-验证ca签发证书的签名">4.3.3 验证CA签发证书的签名</span></h4><p>证书文件分为三部分，Data域、Signature Algorithm域、Signature Value域，Date域为证书的基本信息部分，也称作TBSCertificate（To-Be-Signed Certificate）。</p><p>寻找TBSCertificate位置的指令：<code>openssl x509 -in server.crt -inform pem -outform pem -out server.pem</code></p><p>以ASN.1格式解析PEM文件：<code>openssl asn1parse -i -in server.pem</code></p><p>根据解析信息提取TBSCertificate，保存为<code>server.tbs</code>文件：<code>openssl asn1parse -in server.pem -strparse 5 -out server.tbs</code></p><h4><span id="434-将证书用于https-web服务器">4.3.4 将证书用于HTTPS Web服务器</span></h4><p>首先，配置DNS服务。为了让虚拟机能够解析该域名，需要将<code>127.0.0.1 PKILab.com</code>填入虚拟机<code>/etc/hosts</code>文件中。</p><p>然后，基于之前生成的证书，使用指令建立一个Web简单服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 将密钥与证书合成为一个文件</span><br><span class="line"><span class="built_in">cp</span> server.key server.pem</span><br><span class="line"><span class="built_in">cat</span> server.crt &gt;&gt; server.pem</span><br><span class="line">//直接将crt拼接到pem后面</span><br><span class="line">// 利用 server.pem 建立一个Web服务器</span><br><span class="line">openssl s_server -cert server.pem -www</span><br></pre></td></tr></table></figure><h2><span id="homework-1">Homework-1</span></h2><h3><span id="11-产生两个程序行为不同的可执行文件">1.1 产生两个程序行为不同的可执行文件</span></h3><h3><span id="12-建立基于apache的https网站">1.2-建立基于Apache的HTTPS网站</span></h3><p>首先需要修改Apache配置文件，<strong>指定网站文件以及网站密钥与证书的存储位置。</strong></p><p>举个栗子~</p><p>要建立一个<code>example.com</code>的网站，需要在<code>/var/www</code>文件夹中新建一个名为<code>example</code>的文件夹，并在其中新建一个<code>index_https.html</code>。</p><p>之后就到了<strong>修改配置文件</strong><code>/etc/apache2/sites-available/&lt;your web&gt;.conf</code>的时候了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:<span class="number">443</span>&gt;</span><br><span class="line"># *表示该配置适用与所有IP与<span class="number">443</span>端口的请求</span><br><span class="line"> ServerName example.com   </span><br><span class="line"> DocumentRoot /var/www/example</span><br><span class="line"> DirectoryIndex index_https.html</span><br><span class="line"></span><br><span class="line"> SSLEngine on</span><br><span class="line"> SSLCertificateFile   <span class="meta"># input the absolute path of the cert of your website </span></span><br><span class="line"> SSLCertificateKeyFile  <span class="meta"># input the absolute path of the key of your website</span></span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">SSLCipherSuite AES256-SHA # 指定加密组件</span><br></pre></td></tr></table></figure><blockquote><p> 至于网站证书应该如何生成以及密钥文件应该如何生成，请看Lab-3</p><p>AH00558: apache2: Could not reliably determine the server’s fully qualified domain name, using 127.0.1.1. Set the ‘ServerName’ directive globally to suppress this message<br>解决方案：</p><p>在/etc/apache2/apache2.cnf中添加</p><p>ServerName  your_server_name</p></blockquote>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5%E7%9F%A5%E8%AF%86/">实践知识</category>
      
      
      
      <comments>http://www.warmfire.com/2023/09/29/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%88%9B%E6%96%B0%E5%AE%9E%E9%AA%8C%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>可证明安全第四周学习日志</title>
      <link>http://www.warmfire.com/2023/09/27/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/09/27/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Wed, 27 Sep 2023 01:58:02 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;strong&gt;randomness extractor&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ext(X,seed)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One-time pad&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;limitations&lt;ul&gt;
&lt;li&gt;the key is &lt;st</description>
        
      
      
      
      <content:encoded><![CDATA[<p><strong>randomness extractor</strong></p><ul><li>Ext(X,seed)</li></ul><p>One-time pad</p><ul><li>limitations<ul><li>the key is <strong>as long as</strong> the message </li><li>only secure if each key is used to encrypt a <strong>single</strong> message</li><li>Trivially broken by a known-plaintext attack</li></ul></li></ul><p>Optimality of the one-time pad</p><p><strong>Theorem</strong></p><p>if (Gen,Enc,Dec) with message space M is perfectly secret, then $|K| \ge |M|$</p><h2><span id="perfect-indistinguishability">Perfect Indistinguishability</span></h2><p>probability &gt; $2^{-60}$</p><p>Def. 2.6</p><p>$\Pi$ is perfectly indistinguishable if for all attackers $\mathcal{A}$, it holds that </p><script type="math/tex; mode=display">\Pr[PrivK^{eav}_{\mathcal{A},\Pi}] = \frac{1}{2}</script><h2><span id="security-definition-of-encryption">Security Definition of Encryption</span></h2><p>$k \leftarrow Gen(1^\lambda)$表示输入的长度是$\lambda$</p><p>two approaches:</p><ol><li>concrete security<ul><li>$(t,\epsilon)$<ul><li>fail probability $\epsilon$</li><li>run time $t$</li></ul></li><li>$\Pr[PrivK^{eav}_{\mathcal{A},\Pi}] \le 0.5 + \epsilon$</li></ul></li><li>Asymptotic security<ul><li>security parameter</li></ul></li></ol>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8/">可证明安全</category>
      
      
      
      <comments>http://www.warmfire.com/2023/09/27/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>安全协议第四周学习日志</title>
      <link>http://www.warmfire.com/2023/09/26/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/09/26/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Tue, 26 Sep 2023 01:43:45 GMT</pubDate>
      
        
        
      <description>&lt;h1&gt;&lt;span id=&quot;安全协议ban逻辑&quot;&gt;安全协议（BAN逻辑）&lt;/span&gt;&lt;/h1&gt;&lt;p&gt;安全协议分析假设密码学原语是安全的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;学习目标&lt;/p&gt;
&lt;p&gt;理解并掌握BAN逻辑的基本框架&lt;/p&gt;
&lt;p&gt;能够基于BAN逻辑进行分析&lt;/p</description>
        
      
      
      
      <content:encoded><![CDATA[<h1><span id="安全协议ban逻辑">安全协议（BAN逻辑）</span></h1><p>安全协议分析假设密码学原语是安全的</p><blockquote><p>学习目标</p><p>理解并掌握BAN逻辑的基本框架</p><p>能够基于BAN逻辑进行分析</p></blockquote><h2><span id="1-安全协议分析方法">1 安全协议分析方法</span></h2><p>安全协议分析目的：证明安全协议的证明<strong>执行过程满足安全需求定义</strong></p><p>安全协议分析活动不仅包含安全协议设计迭代过程中的安全协议分析阶段，也包含<strong>需求定义阶段</strong></p><ul><li>证明协议不安全，找返利</li><li>证明协议安全，困难</li></ul><p>有五种基本方法</p><ol><li>可证明安全理论与方法<ul><li>本质上是一种公理化研究方法</li><li>利用归约论断指出挫败方案或协议的唯一方法是破译或解决极微本原</li><li>具有明确的安全定义和计算化的语义，难以进行自动化分析</li></ul></li><li>形式化分析理论与方法<ul><li>使协议设计者通过系统分析，将注意力集中于接口、系统环境的假设、系统在不同条件下的状态、条件不满足是系统出现的情况及系统不变的属性，并通过系统验证，提供安全保证</li><li>常见三种形式化分析方法<ol><li><strong>以BAN类逻辑为代表的基于推理结构性方法</strong>，运用逻辑系统</li><li><strong>基于攻击结构性方法</strong></li><li><strong>基于证明结构性方法</strong></li></ol></li><li><strong>易于自动化分析，没有计算化的语义</strong></li></ul></li><li>混合理论与方法</li><li>零只是证明理论与方法<ul><li>证明者试图使验证者相信某个论断正确，却不想验证者提供任何有用的信息</li></ul></li><li>安全多方计算理论与方法</li></ol><h2><span id="2-ban逻辑的基本框架">2 BAN逻辑的基本框架</span></h2><p>BAN逻辑是一种分析认证协议的逻辑,是一种关于知识和信念的逻辑,包含每个主体各自维护的信念集合,以及从旧信念推导出新信念的推理规则集合</p><p>BAN逻辑旨在<strong>抽象层次上</strong>讨论认证协议的安全性</p><p>假设:</p><ol><li><p>时间假设</p><ol><li>协议分析中区分两个时间段，过去时间段和当前时间段</li><li>当前时间段开始于协议运行的开始阶段，所有在此时间之前发送的消息都认为是过去时间段发送的消息。</li><li>如果信仰在开始时成立，则在整个当前时间段都成立，而在过去时间段成立的信仰，在当前时间段不一定成立</li></ol></li><li><p>密钥假设</p><ol><li>加密系统是完善的，只有知道密钥的主体才能解读密文消息，任何不知道密钥的主体不能解读密文消息，也没有办法根据密文推导密钥。</li><li>密文块不能被篡改，也不能用几个小的密文块来拼凑成一个新的大的密文块，一个消息中的两个密文块被看作是分两次分别送达的。</li><li>密文中有足够的冗余信息，解密者可以根据解密的结果判断他是否已经正确解密</li><li>消息中有足够的冗余信息，使得主体可以判断该消息是否来源于自身。</li></ol></li><li><p>主题假设</p><ol><li>BAN逻辑还假设协议的参与主体是诚实的。</li></ol></li></ol><p><strong>重点部分:</strong></p><h3><span id="21-ban逻辑构建的语法和语义">2.1 BAN逻辑构建的语法和语义</span></h3><p>BAN逻辑是一种多类型的模态逻辑 many-sorted model logic</p><p>BAN逻辑的语义中主要包含下面三种处理对象：</p><ul><li>主体 principals</li><li>密钥 keys</li><li>公式 formula 也被称为语句或命题 statements</li></ul><p>在BAN逻辑中，</p><ul><li>A，B表示主体， S表示服务器</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004084412595.png" alt="image-20231004084412595"></li><li>$N_a,N_b,N_c$表示随机数</li><li>P、Q、R表示主体变量，K表示密钥变量，X、Y表示公式变量</li></ul><p>包含和取指一种命题连接词，用逗号表示</p><p><strong>BAN逻辑的10个基本逻辑构件</strong></p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004084704488.png" alt="image-20231004084704488"></p><h3><span id="22-ban逻辑的推理规则">2.2 BAN逻辑的推理规则</span></h3><p>BAN逻辑的推理规则共19条</p><ul><li><p>消息含义规则</p><ul><li>使主体推知其他主体发送过的消息——说明消息的出处</li></ul><ol><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004093214446.png" alt="image-20231004093214446">如果P相信$K_{PQ}$使P与Q的共享密钥，并且P曾经接受包含$K_{PQ}$加密的消息X，则P相信Q发送过消息X。</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004093439495.png" alt="image-20231004093439495">如果P相信Q具有密钥公钥$K_Q$，P曾经接受过由私钥加密的X，则P相信Q发送过消息X</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004093815317.png" alt="image-20231004093815317">如果P相信PQ共享秘密Y，且P曾经接收过与秘密Y合成的消息X，则P相信Q发送过消息X</li></ol></li><li><p>随机数验证规则</p><ul><li>如果消息使当前发送的，那么消息的发送者应该相信该消息</li></ul><ol><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004094056781.png" alt="image-20231004094056781">如果P相信X使新鲜的，且P相信Q曾经说过X，那么P相信Q相信X</li></ol></li><li><p>管辖规则</p><ul><li>扩展了主体的推知能力</li></ul><ol><li>使主体可以在基于其他主体已有的信仰之上推知新的信仰<img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004094300249.png" alt="image-20231004094300249">如果P相信Q对于消息X具有管辖权，且P相信Q相信X，那么P相信X</li></ol></li><li><p>接收消息规则</p><ul><li>定义了主体在协议运行中对消息的获取</li></ul><ol><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004094434132.png" alt="image-20231004094434132">如果P曾经接受过（X，Y)，那么P曾经受到过消息X</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004094533512.png" alt="image-20231004094533512">如果P曾经接受过带有秘密信息Y的\<x\>，那么P曾经接受过消息X</x\></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004094749112.png" alt="image-20231004094749112">如果P相信PQ具有公共密钥$k_{PQ}$，且P接受过用$k_{PQ}$加密的X，那么P接受过X</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004094853674.png" alt="image-20231004094853674">如果P相信P具有密钥公钥k,且P接受过用k加密的消息X，那么P接受过消息X</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004095021514.png" alt="image-20231004095021514">如果P相信Q具有密钥公钥k，且P接受过用私钥加密的X，那么P曾经接受过X</li></ol></li><li><p>新鲜性规则</p><ul><li>如果一个公式的一部分是新鲜的，则该公式的全部是新鲜的</li></ul><ol><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100038029.png" alt="image-20231004100038029">如果P相信X是新鲜的，则P相信消息（X，Y) 是新鲜的</li></ol></li><li><p>信仰规则</p><ul><li>反应了信念在消息的级联与分割的不同操作中的一致性以及信念在此类操作中的传递性</li></ul><ol><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100544696.png" alt="image-20231004100544696"></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100552214.png" alt="image-20231004100552214"></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100603723.png" alt="image-20231004100603723"></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100610283.png" alt="image-20231004100610283"></li></ol></li><li><p>密钥与秘密共享规则</p><ol><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100729020.png" alt="image-20231004100729020"></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100737956.png" alt="image-20231004100737956"></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100746413.png" alt="image-20231004100746413"></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004100756376.png" alt="image-20231004100756376"></li></ol></li></ul><h2><span id="3-应用ban逻辑分析协议的方法">3 应用BAN逻辑分析协议的方法</span></h2><p>基本原理：</p><ul><li>可形式化定义协议的目标，并确定协议初始时刻各参与者的知识和信任，通过协议里信息的发送和接受步骤产生新知识，运用推到规则来得到目标信任和新知识</li><li>如果得到最终的关于知识和信任的语句集里不包含所要得到的信任和知识的语句是，就表明协议存在安全缺陷</li></ul><h3><span id="31-理想化过程">3.1 理想化过程</span></h3><p>省略协议会话中的明文部分，理想化后的协议消息形式为$\{X_1\}_{K_1},\cdots,\{X_n\}_{K_n}$</p><p>指导方针：</p><ul><li>如果任何时候接收者得到了一个真实消息m后能推导出发送者必须相信X，那么m能被解释成一个公式X</li><li>现实中的随机数被转化为任意的新公式</li><li>假定在整个过程中发送这都相信这些公式： \<x\>_Y<ul><li>把Y作为一个秘密使用，仅当该秘密用作身份证明时有效</li><li>出于实用性目的，每个主体总是相信他作为消息产生的公式</li></ul></x\></li></ul><h3><span id="32-认证协议的基本假设">3.2 认证协议的基本假设</span></h3><p>描述协议运行开始时的初始条件</p><p>发送第一条消息以前的公式表示各主体在协议开始时的信条</p><ul><li>各主体之间共享了哪些密钥</li><li>哪些主体能产生新鲜的随机数</li><li>哪些主体在哪方面被信任</li></ul><h3><span id="33-ban逻辑分析协议解释">3.3 BAN逻辑分析协议解释</span></h3><p>用逻辑语言解释理想化后的协议语句</p><p>解释过程遵循以下原则：</p><ul><li>如果在P-&gt;Q:Y之前X成立，则之后X和QΔY都成立</li><li>如果根据推理规则，能从已知的X推导出Y，则X成立时Y必然成立</li><li>如果能从X得到Y，则X成立时Y也成立</li></ul><h3><span id="34-形式化协议目标">3.4 形式化协议目标</span></h3><p>一些对称密码体制的认证协议希望安全的交换会话密钥，形式化描述协议目标为：</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004195834918.png" alt="image-20231004195834918"></p><p>确认对方也信任该会话密钥：</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004195859976.png" alt="image-20231004195859976"></p><h3><span id="35-ban逻辑分析步骤">3.5 BAN逻辑分析步骤</span></h3><ol><li>对协议进行理想化处理，将协议的实际信息转换成BAN逻辑的公式</li><li>用逻辑语言描述协议初始状态，给出所有的基本假设</li><li>对协议进行解释，将协议会话转换为逻辑语言</li><li>用逻辑语言描述协议所需达到的目标</li><li>应用推理规则对协议进行形式化分析，从协议的开始进行退证，直至验证协议是否满足协议目标</li></ol><h2><span id="4-ban逻辑的应用实例">4 BAN逻辑的应用实例</span></h2><p>NS协议的分析</p><h2><span id="5-ban逻辑的缺陷及改进方向">5 BAN逻辑的缺陷及改进方向</span></h2><h3><span id="51-ban逻辑的缺陷">5.1 BAN逻辑的缺陷</span></h3><ol><li>BAN逻辑基于的基本假设——主题假设存在问题<ul><li>不一定总是诚实</li></ul></li><li>理想化过程存在问题<ul><li>BAN逻辑没有对协议的理想化过程提供标准的转换格式，过分依赖于分析者的直觉</li></ul></li><li>缺乏完备性</li><li>缺乏一个定义良好、确切的语义</li></ol><h3><span id="52-ban逻辑的改进方向">5.2 BAN逻辑的改进方向</span></h3><ul><li>确立一个可靠的语义</li><li>减少理想化步骤的模糊度</li></ul>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE/">安全协议</category>
      
      
      
      <comments>http://www.warmfire.com/2023/09/26/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>网络内容安全第四周学习日志</title>
      <link>http://www.warmfire.com/2023/09/25/%E7%BD%91%E7%BB%9C%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/09/25/%E7%BD%91%E7%BB%9C%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Mon, 25 Sep 2023 07:41:00 GMT</pubDate>
      
        
        
      <description>&lt;h2&gt;&lt;span id=&quot;一-网络信息内容获取模型&quot;&gt;一、网络信息内容获取模型&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;del&gt;&lt;em&gt;PPT乱七八糟绷不住了&lt;/em&gt;&lt;/del&gt;&lt;/p&gt;
&lt;h3&gt;&lt;span id=&quot;10-互联网信息类型&quot;&gt;1.0 互联网信息类型&lt;/span&gt;&lt;/h3&gt;</description>
        
      
      
      
      <content:encoded><![CDATA[<h2><span id="一-网络信息内容获取模型">一、网络信息内容获取模型</span></h2><p><del><em>PPT乱七八糟绷不住了</em></del></p><h3><span id="10-互联网信息类型">1.0 互联网信息类型</span></h3><ul><li>网络媒体形态<ul><li>广播式媒体<ul><li>新闻网站、论坛、博客</li></ul></li><li>交互式媒体<ul><li>社交媒体、搜索引擎等</li></ul></li></ul></li><li>网络媒体信息<ul><li>互联网网站公开发布的信息，用户通常可以基于通用网络浏览器获取</li></ul></li><li>网络通信信息<ul><li>实现与特定点通信或点对点通信所交互的信息</li></ul></li><li>发布信息类型<ul><li>文本</li><li>图像</li><li>音频</li><li>视频</li></ul></li><li>媒体发布方式<ul><li>匿名</li><li>身份认证</li></ul></li><li>网页形态<ul><li>静态</li><li>动态：含“？”或输入参数的URL</li></ul></li><li>信息交互协议</li><li>专业客户端软件</li></ul><h3><span id="11-网络信息内容获取模型">1.1 网络信息内容获取模型</span></h3><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/网络环境下的信息内容获取模型.png" alt="img1"></p><p><strong>信息检索</strong> (Information Search， IS)是信息需求者主动搜寻所需要的信息</p><p><strong>信息推荐</strong></p><p><strong>信息交互</strong></p><p><strong>信息浏览</strong></p><h3><span id="12-网络媒体信息获取原理">1.2 网络媒体信息获取原理</span></h3><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/网络信息获取流程.png" alt="img2"></p><p>网上采集算法（爬虫）</p><h3><span id="13-网络媒体信息获取的分类">1.3 网络媒体信息获取的分类</span></h3><ol><li>全网信息获取</li><li>定点信息获取</li><li>基于主题的信息获取和元搜索<ul><li>元搜索又称多搜索引擎<ul><li>搜索机制分为并行式和串行式</li></ul></li><li>高级检索功能：<ul><li>使用布尔逻辑符检索</li><li>域名过滤</li><li>等等</li></ul></li></ul></li></ol><p>信息获取的技术难点</p><ul><li>网络媒体信息：形态各异、信息类型多样</li><li>DDOS</li></ul><h2><span id="二-搜索引擎技术">二、搜索引擎技术</span></h2><ul><li>网络内容分析</li><li>网页索引</li><li>查询解析</li><li>相关性计算</li></ul><h3><span id="221-网上采集算法">2.2.1 网上采集算法</span></h3><p>爬虫</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/爬虫原理.png" alt="img3"></p><h4><span id="分类">分类</span></h4><ul><li>通用网络爬虫</li><li>聚焦网络爬虫</li><li>增量式网络爬虫</li><li>深层网络爬虫</li></ul><h4><span id="原理">原理</span></h4><ol><li>初始URL集合</li><li>信息获取</li><li>信息解析</li><li>信息判重<ol><li>URL判重</li><li>内容摘要判重</li></ol></li></ol><h4><span id="url爬取策略">URL爬取策略</span></h4><ul><li>深度优先遍历策略</li><li>广度优先遍历策略</li><li>反向链接数策略：一个网页被其他网页链接指向的数量</li><li>Partial PageRank策略</li><li>OPIC策略 online page importance computation </li><li>大站优先策略</li></ul><h3><span id="222-排级算法">2.2.2 排级算法</span></h3><h4><span id="pagerank">PageRank</span></h4><p>原理：民主表决</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/PR算法.png" alt="img4"></p><script type="math/tex; mode=display">\Pr(t) = (1-d) + d(\sum_{i=1}^{n}{\frac{\Pr(t_i)}{|t_i|}})</script><p>$\Pr(t_i)$入度; $|t_i|$出度 $d$影响因子</p><font color="red">入度为什么是概率呢？</font><p>优点：</p><ol><li>直接高效</li><li>主题集中</li></ol><p>缺点：</p><ol><li>忽略网页内容，干扰挖掘结果</li><li>结果范围窄</li><li>影响因子与网页获取数量缺乏科学性</li></ol><p>用来表现网页等级的一个标准，0-10，值越高越受欢迎</p><h4><span id="hits">HITS</span></h4><p><strong>Hub</strong>页面（枢纽页面）指向高质量链接的网页</p><p><strong>Authority</strong>页面（权威页面）相关领域高质量网页</p><p><strong>枢纽值</strong> Hub Scores = sum of all relevant Authority scores</p><p><strong>权威值</strong> Authority Scores = sum of all relevant Hub scores</p><p>基本思想：<strong>相互增强关系</strong></p><h5><span id="算法"><strong>算法</strong></span></h5><ol><li>构建根集合</li><li>扩展集合Base</li><li>计算扩展集base中所有页面的Hub值和Authority值</li><li>排序，结果输出</li></ol><p><strong>优点</strong></p><ol><li>知识范围扩大</li><li>搜索时部分地考虑了页面内容，挖掘结果科学性大大增强</li></ol><p><strong>缺点</strong></p><ol><li>效率低，实时性差</li><li>主题漂移</li><li>易被操纵者操纵结果</li><li>结构不稳定</li></ol><h3><span id="223-搜索引擎与垃圾消息关系">2.2.3 搜索引擎与垃圾消息关系</span></h3><p>垃圾信息制造手段</p><ul><li>提高排名技术 boosting<ul><li>关键字垃圾 term spamming</li><li>链接垃圾 link spamming</li></ul></li><li>隐藏技术 hiding<ul><li>隐藏Boosting技术</li><li>content hiding、 cloaking、 redirection</li></ul></li></ul><h2><span id="三-数据挖掘技术">三、数据挖掘技术</span></h2><p>数据挖掘：通过从数据库中抽取<strong>隐含的</strong>、<strong>未知的</strong>、<strong>具有潜在使用价值</strong>的过程</p><h3><span id="232-web挖掘技术">2.3.2 Web挖掘技术</span></h3><p>从大量<strong>非结构化、异构</strong>的Web信息资源中发现兴趣性的知识，包括概念、模式、规则、规律、约束及可视化等形式的非平凡过程。</p><p>挖掘过程</p><ol><li>资源发现</li><li>信息选择与预处理</li><li>综合过程</li><li>分析过程</li></ol><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004222043807.png" alt="image-20231004222043807"></p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004222027301.png" alt="image-20231004222027301"></p><h3><span id="233-web文本挖掘技术">2.3.3 Web文本挖掘技术</span></h3><p>从Web文档和Web活动中发现、抽取感兴趣的、潜在有用的模式和隐藏的信息的过程</p><p>定义：从大量文本的集合C中发现隐含的模式p。如果将C当作输入，p当作输出，那么Web文本挖掘的过程就是从输入到输出的一个映射。</p><h2><span id="四-信息推荐技术">四、信息推荐技术</span></h2><p>信息推荐与信息检索的区别：</p><p>关注点上：信息检索侧重检索结果，信息推荐侧重服务对象</p><p>主动性上：信息检索侧重用户主导，信息推荐侧重系统主导</p><h3><span id="241-信息推荐概念和形式化定义">2.4.1 信息推荐概念和形式化定义</span></h3><p>非形式化定义：利用电子商务网站向客户提供商品信息和建议，帮助用户决定应购买什么产品，模拟销售人员帮助客户完成购买过程。</p><p>信息推荐有三个组成要素：<strong>推荐候选对象、用户、推荐方法</strong></p><p>形式化定义：</p><p>设C是所有用户的集合，S是所有可以推荐给用户的商品对象的集合，效用函数u()用以计算对象s对用户c的推荐度和产品的可得性，即：</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004230008763.png" alt="image-20231004230008763"></p><p>R是一定范围内的全序的非负实数，信息推荐要研究的问题就是找到推荐度R最大的那些对象$s^*$，即：</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004230108996.png" alt="image-20231004230108996"></p><blockquote><p>arg   是变元（即自变量argument）的英文缩写。<br>arg min 就是使后面这个式子达到最小值时的变量的取值<br>arg max 就是使后面这个式子达到最大值时的变量的取值</p></blockquote><h3><span id="242-信息推荐算法">2.4.2 信息推荐算法</span></h3><p><strong>基于内容推荐</strong></p><p><strong>根据用户已选择的对象</strong>，推荐其他类似属性的对象作为推荐</p><ul><li><strong>对象内容特征</strong> Content(s)：以对象的文字描述为主</li><li><strong>用户的资料模型</strong> ContentBasedProfile(c)：取决于机器学习方法</li><li>u(c,s) = score(ContentBasedProfile(c), Content(s))</li></ul><p><strong>协同过滤推荐</strong></p><p>推荐<strong>相似用户</strong>所选择的对象</p><ul><li>找到与当前用户相似的其他用户</li><li>计算对象s对于用户的效用值</li><li>利用效用值对所有s进行排序或加权操作，找到$s^*$</li></ul><p><strong>启发式方式</strong>：使用与新用户c相似的用户c’对一个对象的评价来预测效用</p><p>基于模型的方法：利用用户c对众多对象的评分来学习一个c的模型，然后使用概率方法对新的对象s的推荐效用进行预测</p><p>组合推荐：前/中/后融合组合推荐</p><p>后融合：结果层次上的融合</p><p>中融合：以一种推荐方法做框架，融合另一种推荐方法</p><p>前融合：直接融合</p><h2><span id="五-信息还原技术">五、信息还原技术</span></h2><h3><span id="251-电脑还原技术">2.5.1 电脑还原技术</span></h3><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231004231537426.png" alt="image-20231004231537426"></p><h3><span id="252-网页还原技术">2.5.2 网页还原技术</span></h3><ul><li>数据包捕获技术——网卡接收方式为混杂方式</li><li>协议还原技术<ul><li>数据包捕获、重组、存储、分发</li></ul></li><li>网页内容还原技术</li></ul><h3><span id="253-多媒体信息还原技术">2.5.3 多媒体信息还原技术</span></h3><ul><li>基于解码器</li><li>基于封装</li><li>基于远程线程注入</li></ul>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E7%BD%91%E7%BB%9C%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8/">网络内容安全</category>
      
      
      
      <comments>http://www.warmfire.com/2023/09/25/%E7%BD%91%E7%BB%9C%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>工科数学分析第二章——数列极限</title>
      <link>http://www.warmfire.com/2023/09/23/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/09/23/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Sat, 23 Sep 2023 08:04:27 GMT</pubDate>
      
        
        
      <description>&lt;h1&gt;&lt;span id=&quot;第2章-数列极限&quot;&gt;第2章 数列极限&lt;/span&gt;&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;为了避免形式主义的情况，这里主要记录一些容易以文字形式呈现或公式呈现不是特别困难的一些式子&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;span id=&quot;21</description>
        
      
      
      
      <content:encoded><![CDATA[<h1><span id="第2章-数列极限">第2章 数列极限</span></h1><blockquote><p>为了避免形式主义的情况，这里主要记录一些容易以文字形式呈现或公式呈现不是特别困难的一些式子</p></blockquote><h2><span id="21-数列的极限">2.1 数列的极限</span></h2><h3><span id="211数列极限的定义">2.1.1数列极限的定义</span></h3><p>数列就是按照正整数编号的一列实数:</p><script type="math/tex; mode=display">a_1,a_2,\cdots,a_n,\cdots</script><p>通常记为$\{a_n\}_{n \geq 1}$或简记为$\{a_n\}$，其中$a_n$称为数列的通项</p><h4><span id="定义211">定义2.1.1</span></h4><p>设$\{a_n\}$是一个数列，a是一个给定的师叔，如果对任意给定的$\epsilon &gt; 0$，总存在一个正整数N，使得当$n&gt;N$时，$\left\vert a_n - a \right\vert &lt; \epsilon$，则称$\{a_n\}$收敛于a，或者称a为数列的极限，记为$\lim_{n \rightarrow \infty}{a_n = a}$</p><p>当数列有极限时，则称数列收敛，否则发散。</p><p><strong>e.g.</strong></p><p>设$a&gt;1$是给定的正数，证明$lim_{n \rightarrow \infty}{\frac{n}{a^n}} = 0$</p><p>由二项式定理证明指数表示成多项式的最高次幂高于任意的多项式</p><h3><span id="212极限定义的否定形式">2.1.2极限定义的否定形式</span></h3><script type="math/tex; mode=display">\lim_{n\rightarrow\infty}{a_n \neq a} \Leftrightarrow \exists \epsilon_0 > 0, s.t. \forall N \in N^*, \exists n_0 > N, \left\vert {a_{n_0} - a}\right\vert \ge \epsilon_0</script><h2><span id="22-数列极限的性质和运算">2.2 数列极限的性质和运算</span></h2><h4><span id="定理221-极限唯一性">定理2.2.1 极限唯一性</span></h4><p>收敛数列的极限是唯一的</p><h4><span id="定义221">定义2.2.1</span></h4><p>给定$\{a_n\}$，如果存在一个实数A，s.t.对所有的n都有$a_n \le  A (a_n \ge A)$，则称此数列有上界(下界)，A称为该数列的一个上界（下界），如果该数列既有上界又有下界，则称该数列有界</p><h4><span id="定理222-有界性">定理2.2.2 有界性</span></h4><p>收敛数列都是有界的</p><h4><span id="定理223-保序性">定理2.2.3 保序性</span></h4><ol><li>设$\lim_{n\rightarrow\infty}{a_n=a},\lim_{n\rightarrow\infty}{b_n=b}$，若$a&gt;b$，则$\exists N \in N^*, s.t. n&gt;N时, a_n&gt;b_n$</li><li>若$a_n\ge b_n(n=1,2,\cdots),\lim_{n\rightarrow\infty}{a_n}=a,\lim_{n\rightarrow\infty}{b_n=b}$，则$a\ge b$</li></ol><p><strong>推论（保号性）-简记</strong></p><ol><li>若a&gt;0,则$a_n &gt; 0$</li><li>若$a_n &gt; 0$,则a&gt;0</li></ol><h4><span id="定义222">定义2.2.2</span></h4><p>设$\{a_n\}$是一个数列，任给正整数列$n_1 &lt; n_2 &lt; n_3 &lt; \cdots$，称数列$a_{n_1},a_{n_2},a_{n_3},\cdots$为$\{a_n\}$的一个子列，记为$\{a_{n_k}\}$</p><h4><span id="定理224-数列极限与子列极限的一致性">定理2.2.4 数列极限与子列极限的一致性</span></h4><p>若$\{a_n\}$的极限为a，则他的任意子列极限也为a。</p><h4><span id="定理225-数列极限的四则运算">定理2.2.5 数列极限的四则运算</span></h4><ol><li>若$\lim_{n\rightarrow\infty}{a_n=a},\lim_{n\rightarrow\infty}{b_n=b}$，则数列$\{a_n \pm b_n\}$收敛，极限为$a \pm b$</li><li>若$\lim_{n\rightarrow\infty}{a_n=a},\lim_{n\rightarrow\infty}{b_n=b}$，则数列$\{a_n b_n\}$收敛，极限为ab</li><li>若$\lim_{n\rightarrow\infty}{a_n=a},\lim_{n\rightarrow\infty}{b_n=b\neq0}$，则数列$\{\frac{a_n}{b_n}\}$收敛，极限为$\frac{a}{b}$</li></ol><h4><span id="定理226-夹逼定理">定理2.2.6 夹逼定理</span></h4><p>假设数列$\{a_n\}$、$\{b_n\}$、$\{c_n\}$，满足$a_n\le b_n \le c_n$，且$\lim_{n\rightarrow\infty}{a_n=c_n=a}$则$b_n$极限也为a</p><h2><span id="23-无穷小和无穷大">2.3 无穷小和无穷大</span></h2><h3><span id="231-无穷小">2.3.1 无穷小</span></h3><h4><span id="定义231-无穷小数列">定义2.3.1 无穷小数列</span></h4><p>若数列$\{a_n\}$的极限为0，则成这个数列为无穷小数列，简称无穷小</p><h4><span id="定理231">定理2.3.1</span></h4><ol><li>数列$\{a_n\}$为无穷小的充要条件是$\{|a_n|\}$是无穷小</li><li>两个无穷小数列的和或差依旧是无穷小数列</li><li>设$\{a_n\}$为无穷小，$\{c_n\}$为有界数列，则$\{a_nc_n\}$为无穷小数列</li><li>设$0\le a_n \le b_n$若$\{b_n\}$为无穷小，则$\{a_n\}$也为无穷小</li><li>$\lim_{n\rightarrow\infty}{a_n=a} \Leftrightarrow \{a_n -a \}无穷小$</li></ol><h3><span id="232-无穷大">2.3.2 无穷大</span></h3><h4><span id="定义232">定义2.3.2</span></h4><p>设$\{a_n\}$是一个数列，如果对任意给定的整数M，总存在正整数N，使得当$n&gt;N$时，有$|a_n| &gt; M$，则称$\{a_n\}$无穷大，记为$\lim_{n\rightarrow\infty}{a_n =  \infty}$</p><h4><span id="性质231">性质2.3.1</span></h4><ol><li>$\{a_n\}$无穷大，则$\{a_n\}$无界</li><li>任何无界数列都有无穷大的子列</li><li>若$\{a_n\}$极限为正无穷，$\{b_n\}$极限为正无穷，则它们的和数列或奇数列也为无穷数列</li></ol><h4><span id="性质232">性质2.3.2</span></h4><p>$\{a_n\}$无穷大 等价于 $\{\frac{1}{a_n}\}$无穷小</p><h3><span id="232-stolz定理">2.3.2 Stolz定理</span></h3><h4><span id="定理232-fracinftyinfty">定理2.3.2 $\frac{\infty}{\infty}$</span></h4><p>设$\{b_n\}$是严格递增趋于正无穷的数列，如果</p><script type="math/tex; mode=display">\lim_{n\rarr\infty} \frac{a_n - a_{n-1}}{b_n-b_{n-1}} = A</script><p>则$\lim_{n\rightarrow\infty}\frac{a_n}{b_n}=A$</p><h4><span id="定理233-frac00">定理2.3.3 $\frac{0}{0}$</span></h4><p>设$\{b_n\}$ $\{a_n\}$都是无穷小的数列且$\{b_n\}$严格单调，如果</p><script type="math/tex; mode=display">\lim_{n\rarr\infty} \frac{a_n - a_{n-1}}{b_n-b_{n-1}} = A</script><p>则$\lim_{n\rightarrow\infty}\frac{a_n}{b_n}=A$</p><h2><span id="24-单调数列的极限及其应用">2.4 单调数列的极限及其应用</span></h2><h4><span id="定义241-单调数列">定义2.4.1 单调数列</span></h4><p>$a_n \le a_{n+1}$单调递增，$a_n &lt; a_{n+1}$ 严格单调</p><h4><span id="定理241-单调有界定理">定理2.4.1 单调有界定理</span></h4><p>若$\{a_n\}$单调递增且有上界，则数列收敛，递减类似</p><p>e.g. 2.4.3</p><font color="red">不要忘记stolz定理啊</font><h4><span id="引理-bernoulli-不等式">引理 Bernoulli 不等式</span></h4><p>对任意的$x&gt;1, x\neq 0, n\ge 2, (1+x) ^ n &gt; 1 + nx$</p><p>e.g. 2.4.4</p><p>$\lim_{n\rightarrow\infty}{1 + \frac{1}{2} + \frac{1}{3} + \cdots + \frac{1}{n} - \ln n} = \gamma$欧拉常数，0.57721566…</p><h4><span id="定理242">定理2.4.2</span></h4><ol><li>若单调数列有一个子列收敛，则这个数列收敛</li><li>若单调数列有一个子列趋于$\infty$，则数列也趋于$\infty$</li><li>一个单调数列有么极限存在，有么趋于无穷</li><li>单调数列收敛的充要条件是数列有界</li></ol><h2><span id="25-实数连续性的基本定理">2.5 实数连续性的基本定理</span></h2><h4><span id="定理251-闭区间套定理">定理2.5.1 闭区间套定理</span></h4><p>设$I_n=[a_n,b_n]$为一列闭区间，满足：</p><ol><li>$I_1 \supset I_2 \supset \cdots \supset I_n \supset \cdots $</li><li>这些闭区间的长度满足$\lim_{n\rightarrow\infty}{|I_n|} = \lim_{n\rightarrow\infty}{b_n-a_n}=0$则存在唯一的点$\xi \in  \bigcap_{i=1}^{\infty}I_i$</li></ol><p>通常满足条件1的一列闭区间是一个闭区间套</p><h4><span id="定理252-列紧性定理">定理2.5.2 列紧性定理</span></h4><p>任何有界的无穷数列中都存在收敛的子列</p><h4><span id="定义251-基本列定义">定义2.5.1 基本列定义</span></h4><p>给定$\{a_n\}$，若满足：$\forall \epsilon &gt; 0, \exists N, s.t. \forall n,m &gt; N, |a_m - a_n| &lt; \epsilon$则称$\{a_n\}$为一个基本列（Cauchy列），这里的N仅与$\epsilon$有关</p><p>等价定义m=n+p的形式，对于一切$p\in N^*$成立</p><h4><span id="定理253-数列极限的cauchy收敛原理">定理2.5.3 数列极限的Cauchy收敛原理</span></h4><p>$\{a_n\}$收敛的充要条件是$\{a_n\}$是基本列</p><h4><span id="定义252">定义2.5.2</span></h4><p>设E是实数集，$\aleph=\{I_\lambda|\lambda\in\Delta\}$是一个开区间族，其中$\Delta$是一个指标集，如果$E\subset\bigcup_{\lambda\in\Delta}I_\lambda$则称，$\aleph$覆盖了E，或者说是一个开覆盖</p><h4><span id="定理254-heine-borel定理">定理2.5.4 Heine-Borel定理</span></h4><p>设$\aleph=\{I_\lambda|\lambda\in\Delta\}$为有限闭区间[a,b]任意一个开覆盖，则可从$\aleph=\{I_\lambda|\lambda\in\Delta\}$中选出有限个开区间构成[a,b]的覆盖</p><h2><span id="26-上极限与下极限的概念和性质">2.6 上极限与下极限的概念和性质</span></h2><h4><span id="定义261">定义2.6.1</span></h4><p>设$\{a_n\}$是一个有界数列，令</p><script type="math/tex; mode=display">\overline{a_n} = sup_{k \ge n}\{a_k\} = sup\{a_n,a_{n+1}, \cdots, \} \\\underline{a_n} = inf_{k \ge n}\{a_k\} = inf\{a_n,a_{n+1}, \cdots, \}</script><p>上数列和下数列</p><h4><span id="定义262">定义2.6.2</span></h4><p>设$\{a_n\}$是一个有界数列，则称$\lim_{n\rightarrow\infty}\overline{a_n}$为$\{a_n\}$上极限，反之下极限</p><h4><span id="定理261">定理2.6.1</span></h4><p>设$\{a_n\}$是一个有界数列，则数列$\{a_n\}$收敛充要条件是极限等于上极限等于下极限</p><h4><span id="定理262">定理2.6.2</span></h4><p>设$\{a_n\}$$\{b_n\}$是有界数列，若存在$N\in N^*,s.t. n&gt;N时 a_n\le b_n，则n&gt;N时，a_n\le b_n,\overline{a_n} \le \overline{b_n}$</p><h4><span id="定理263">定理2.6.3</span></h4><p>设$\{a_n\}$有界</p><ol><li>对任意的$M &gt; \overline{\lim_{n\rightarrow\infty}}{a_n}$，都存在$N\in N^*, s.t. n&gt; N 时 a_n&lt;M$</li><li>对任意的$m &lt; \underline{\lim_{n\rightarrow\infty}}{a_n}$，都存在$N\in N^*, s.t. n&gt; N 时 a_n&gt;m$</li></ol><h4><span id="定理264">定理2.6.4</span></h4>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E6%95%B0%E5%AD%A6/">数学</category>
      
      
      
      <comments>http://www.warmfire.com/2023/09/23/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>cpp学习日志</title>
      <link>http://www.warmfire.com/2023/09/23/cpp%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/09/23/cpp%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Sat, 23 Sep 2023 01:36:53 GMT</pubDate>
      
        
        
      <description>&lt;blockquote&gt;
&lt;p&gt;参考主教程：&lt;a href=&quot;https://light-city.github.io/&quot;&gt;C++那些事 (light-city.github.io)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;span id=&quot;基础进阶部分&quot;&gt;基础进阶</description>
        
      
      
      
      <content:encoded><![CDATA[<blockquote><p>参考主教程：<a href="https://light-city.github.io/">C++那些事 (light-city.github.io)</a></p></blockquote><h2><span id="基础进阶部分">基础进阶部分</span></h2><h3><span id="const那些事">const那些事</span></h3><ol><li><p>含义：const说明的类型叫做常类型，常类型的变量或对象的值是不能被更新的</p></li><li><p>作用：</p><ol><li><p>可以定义常量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> a = <span class="number">100</span>;</span><br></pre></td></tr></table></figure></li><li><p>类型检查</p><p>const常量与#define宏定义的常量区别： const 常量具有类型，编译器可以进行安全检查；#define宏定义没有数据类型，知识简单的字符串替换，不能进行安全检查。</p><p><code>const</code>定义的变量只有类型为整数或枚举，且以常量表达式初始化时才能作为常量表达式。</p></li><li><p>防止修改，起保护作用，加强Robustness</p></li><li><p>节省空间，避免不必要的内存分配</p><p>const只是给出了对应的内存地址，而不是像#define一样给出的立即数，const在程序运行过程中一份copy，而#define有若干个copy</p></li></ol></li><li><p>const对象默认为文件局部变量</p><font color="red">非const变量默认为extern， 要使const变量能够在其他文件中访问，必须在文件中显性指定它为extern</font></li><li><p>定义常量</p><ol><li>常量不可更改</li><li>常量必须初始化</li></ol></li><li><p>指针与const</p><ol><li><p>四种相关的const</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> *a;  <span class="comment">//指向const对象的指针或者说指向常量的指针</span></span><br><span class="line"><span class="type">char</span> <span class="type">const</span> *a; <span class="comment">//同上</span></span><br><span class="line"><span class="type">char</span> * <span class="type">const</span> a; <span class="comment">//指向类型对象的const指针，或者说常指针、const指针</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> * <span class="type">const</span> a; <span class="comment">//指向const对象的const指针</span></span><br></pre></td></tr></table></figure><p><strong>允许把非const对象的地址赋给指向const对象的指针</strong></p><p>这时无法通过该指针来修改变量的值，即使指向的是非const对象，也不能通过<code>void *</code> 指针来保存const对象的地址，必须使用从const void * 类型的指针保存const对象的地址</p></li><li><p>常指针</p><p>const指针必须初始化，且指针的值不能修改</p></li><li><p>指向常量的常指针</p></li></ol></li><li><p>函数中使用const</p><ol><li><blockquote><p>const 修饰函数返回值</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">const</span> <span class="type">int</span> * <span class="title">func</span><span class="params">()</span> <span class="comment">// 指针所指不可变</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="type">const</span> <span class="title">func</span><span class="params">()</span> <span class="comment">//指针不可变</span></span></span><br></pre></td></tr></table></figure><ol><li><blockquote><p>const 修饰函数参数</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">void func(const int var) // 传递过来的参数不可变</span><br><span class="line">void func(int *const var) //指针不可变7</span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><p>​    7. 类中使用const</p><p>​</p>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/C-%E5%AD%A6%E4%B9%A0/">C++学习</category>
      
      
      
      <comments>http://www.warmfire.com/2023/09/23/cpp%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
