<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>WarmFire</title>
    <link>http://www.warmfire.com/</link>
    
    <atom:link href="http://www.warmfire.com/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>不忘初心，方得始终</description>
    <pubDate>Thu, 19 Oct 2023 22:38:54 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>淑芬第七周学习日志</title>
      <link>http://www.warmfire.com/2023/10/20/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/20/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Thu, 19 Oct 2023 22:38:54 GMT</pubDate>
      
      <description>&lt;p&gt;0x00 前言&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>0x00 前言</p><span id="more"></span><h2><span id="0x01">0x01</span></h2><h2><span id="0x02">0x02</span></h2><h2><span id="0x03">0x03</span></h2><h2><span id="0x04">0x04</span></h2><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      
      
      <comments>http://www.warmfire.com/2023/10/20/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>图像处理与信息隐藏第七周学习日志</title>
      <link>http://www.warmfire.com/2023/10/20/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/20/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Thu, 19 Oct 2023 22:38:36 GMT</pubDate>
      
      <description>&lt;p&gt;0x00 前言&lt;/p&gt;
&lt;p&gt;图像变换&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>0x00 前言</p><p>图像变换</p><span id="more"></span><h2><span id="0x01-概述">0x01 概述</span></h2><p>图像变换的目的：</p><ul><li>高效、快速地对图像进行处理和分析</li><li>为顶层应用提供特征</li></ul><p>图像变换用二位线性系统描述</p><p>待处理图像$f(x,y)$，处理后图像$g(x,y)$，输入和输出的关系表示为$g(x,y)=\psi[f(x,y)]$</p><p>对于一维实际系统，变量为时间，输出是过去和现在的函数，因果系统；</p><p>图像处理的二维系统为非因果系统。</p><p>数字图像处理的算法一般都为线性的，为了高效、快速地对图像进行处理和分析，需要将原有的图像空间以某种形式转换到另外一些空间，并利用这些性质进行一定的加工。</p><h2><span id="0x02-图像的线性运算">0x02 图像的线性运算</span></h2><h3><span id="21-二维连续线性系统">2.1 二维连续线性系统</span></h3><p>系统连续：其冲激响应为$(x,y)$的连续函数；</p><p>叠加原理：$\psi[af_1(x,y)+bf_2(x,y)]=a\psi[f_1(x,y)]+b\psi[f_2(x,y)]=ag_1(x,y)+bg_2(x,y)$</p><h4><span id="二维狄拉克冲激函数">二维狄拉克冲激函数</span></h4><script type="math/tex; mode=display">\delta(x,y)= \begin{cases}         \infty \  \ x=0,y=0 \\        0 \ \ \ \ else\end{cases}</script><p>性质：</p><script type="math/tex; mode=display">\iint_{-\infty,-\infty}^{\infty,\infty} \delta(x,y)dxdy=1  （筛选性）\\\delta(x-\alpha,y-\beta)= \begin{cases}         \infty \  \ x=\alpha,y=\beta \\         0 \ \ \ \ else\end{cases} （可分离性）</script><h4><span id="二位冲激响应函数">二位冲激响应函数</span></h4><p>以二位狄拉克冲激函数作为输入时系统的输出响应函数</p><script type="math/tex; mode=display">h(x,y;\alpha,\beta) = \psi[\delta(x-\alpha,y-\beta)]</script><p>在光学系统里，此冲激响应一般称为点扩散函数 PSF Point Spread Function</p><h4><span id="空间不变系统-位移不变系统">空间不变系统 位移不变系统</span></h4><script type="math/tex; mode=display">h(x,y;\alpha,\beta) = h(x-\alpha,y-\beta)</script><h4><span id="卷积">卷积</span></h4><ul><li><p>连续情况</p><ul><li><script type="math/tex; mode=display">s(t) = \int x(a)w(t-a)da\\ \Downarrow \\s(t) = (x*w)(t)</script></li></ul></li></ul><ul><li><p>离散情况</p><ul><li><script type="math/tex; mode=display">s[t]=(x*w)(t) = \sum_{a=-\infty}^{\infty}x[a]w[t-a]</script></li></ul></li><li><script type="math/tex; mode=display">g(x,y)=f(x,y)*h(x,y)</script></li></ul><h4><span id="相关">相关</span></h4><p><strong>自相关</strong></p><script type="math/tex; mode=display">\begin{align}R_{ff}(x,y)& =f(x,y)\circ f(x,y)\\& =f(x,y)*f(-x,-y) \\& = \iint f(\alpha,\beta)f(x+\alpha,y+\beta)d\alpha d\beta\end{align}</script><p><strong>互相关</strong></p><script type="math/tex; mode=display">\begin{align}R_{fg}(x,y)& =f(x,y)\circ g(x,y)\\& =f(x,y)*g(-x,-y) \\& = \iint f(\alpha,\beta)g(x+\alpha,y+\beta)d\alpha d\beta\end{align}</script><h4><span id="图像的卷积二维离散卷积">图像的卷积：二维离散卷积</span></h4><p>根据图像处理的顺序，采用互相关</p><h3><span id="22-二维连续傅里叶变换">2.2 二维连续傅里叶变换</span></h3><h4><span id="一维情况">一维情况</span></h4><p>若实变量函数$f(x)$是连续可积的，即：$\int_{-\infty}^{\infty}|f(x)|dx&lt;\infty$且$F(u)$是可积的，则傅里叶变换对一定存在</p><script type="math/tex; mode=display">\mathcal{F\{f(x)\}} = F(u) = \int_\infty^\infty f(x)e^{-j2\pi ux}dx \\\mathcal{F^{-1}\{F(x)\}} = f(x) = \int_\infty^\infty F(u)e^{j2\pi ux}du</script><p>如果f(x)考虑为实函数，它的傅里叶变换通常是复数形式，$F(u)=R(u)+jI(u)$，也可以表示为$F(u)=|F(u)|e^{j\phi(u)}$</p><p>$|F(u)|=\sqrt{R^2(u)+I^2(u)}$称为傅里叶谱，或频谱；</p><p>$\phi(u)=arctg[\frac{I(u)}{R(u)}]$称为$f(x)$的相角</p><h4><span id="二维情况">二维情况</span></h4><p>若实变量函数$f(x,y)$是连续可积的，即：$\int_{-\infty}^{\infty}|f(x,y)|dxdy&lt;\infty$且$F(u,v)$是可积的，则傅里叶变换对一定存在</p><script type="math/tex; mode=display">\mathcal{F\{f(x,y)\}} = F(u,v) = \int_\infty^\infty f(x,y)e^{-j2\pi(ux+vy) }dxdy \\\mathcal{F^{-1}\{F(u,v)\}} = f(x,y) = \int_\infty^\infty F(u,v)e^{j2\pi(ux+vy)}dudv</script><p>$|F(u,v)|=\sqrt{R^2(u,v)+I^2(u,v)}$称为傅里叶谱，或频谱；</p><p>$\phi(u,v)=arctg[\frac{I(u,v)}{R(u,v)}]$称为$f(x,y)$的相位;</p><p>$E(u,v)={R^2(u,v)+I^2(u,v)}$ 功率谱</p><h2><span id="0x03-二维离散傅里叶变换及其性质">0x03 二维离散傅里叶变换及其性质</span></h2><h3><span id="1-概述">1 概述</span></h3><p>直接卷积和相关运算在时域中处理计算量大，很难实时处理</p><p>Discrete Fourier Transform DFT 建立了离散时域和离散频域之间的联系，处理方便，计算量小，提高速度。</p><h3><span id="2-二维离散傅里叶变换">2 二维离散傅里叶变换</span></h3><script type="math/tex; mode=display">F(u) = \sum_{x=0}^{N-1}f(x)e^{-j2\pi ux/N} \\f(x) = \frac{1}{N} \sum_{u=0}^{N-1}F(u)e^{-j2\pi ux/N}</script><p>x，u就是离散的整数值</p><script type="math/tex; mode=display">F(u,v) = \sum_{x=0}^{M-1}\sum_{y=0}^{N-1}f(x,y)e^{-j2\pi ( ux/M + vy/N)} \\f(x,y) = \frac{1}{MN} \sum_{u=0}^{M-1}\sum_{v=0}^{N-1}F(u,v)e^{-j2\pi ( ux/M + vy/N)}</script><h3><span id="3-二维离散傅里叶变换的性质">3 二维离散傅里叶变换的性质</span></h3><ol><li>线性：设a,b为常量</li><li>可分离性：一个二维傅里叶变换可以分解为两个以为傅里叶变换1<ul><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231020100105232.png" alt="image-20231020100105232"></li></ul></li><li>平移性<ul><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231020100047732.png" alt="image-20231020100047732"></li></ul></li><li>周期性和共轭对称性<ul><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231020100251251.png" alt="image-20231020100251251"></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231020100301552.png" alt="image-20231020100301552"></li></ul></li><li>旋转不变性<ul><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231020100323400.png" alt="image-20231020100323400"></li></ul></li><li>分配性和比例性<ul><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231020100406357.png" alt="image-20231020100406357"></li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231020100419775.png" alt="image-20231020100419775"></li></ul></li><li>平均值<ul><li></li></ul></li></ol><h3><span id="4-应用傅里叶变换注意的问题">4 应用傅里叶变换注意的问题</span></h3><p>复数运算费时，高频衰减快</p><h2><span id="0x04-图像变换的">0x04 图像变换的</span></h2><h3><span id="1-代数表达式">1 代数表达式</span></h3><h2><span id="0x05-离散沃尔什哈达玛变换">0x05 离散沃尔什——哈达玛变换</span></h2><h3><span id="1-一维离散沃尔什变换">1 一维离散沃尔什变换</span></h3><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      
      
      <comments>http://www.warmfire.com/2023/10/20/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>贝叶斯中文文本分类</title>
      <link>http://www.warmfire.com/2023/10/18/%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%B8%AD%E6%96%87%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB/</link>
      <guid>http://www.warmfire.com/2023/10/18/%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%B8%AD%E6%96%87%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB/</guid>
      <pubDate>Wed, 18 Oct 2023 01:05:48 GMT</pubDate>
      
      <description>&lt;p&gt;0x00 前言&lt;/p&gt;
&lt;p&gt;贝叶斯文本分类实现分类中文文本&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>0x00 前言</p><p>贝叶斯文本分类实现分类中文文本</p><span id="more"></span><h2><span id="0x01-数据集">0x01 数据集</span></h2><h3><span id="数据集下载">数据集下载</span></h3><p>本文采用了清华NLP组提供的THUCNews新闻文本分类数据集的子集<br>数据下载链接：<br>THUCNews数据子集：<a href="https://pan.baidu.com/s/1hugrfRu">https://pan.baidu.com/s/1hugrfRu</a> 密码：qfud</p><h3><span id="数据集分析">数据集分析</span></h3><p>分为十类：</p><ul><li>[‘体育’, ‘财经’, ‘房产’, ‘家居’, ‘教育’, ‘科技’, ‘时尚’, ‘时政’, ‘游戏’, ‘娱乐’]</li><li>每个分类6500条数据，总共65000条数据</li></ul><p>数据集共三个文件：</p><ol><li>train 训练集 5000*10条</li><li>val 验证集 500*10条</li><li>test 测试集 1000*10条</li></ol><h2><span id="0x02-初始版本">0x02 初始版本</span></h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 加载数据集</span></span><br><span class="line">    <span class="comment"># 该函数返回的第一个变量是进行词条切分后的文档集合</span></span><br><span class="line">    <span class="comment"># 函数返回的第二个变量是一个类别标签的集合</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loadDataSet</span>(<span class="params">contents, label:<span class="built_in">list</span></span>) -&gt; (<span class="built_in">list</span>,<span class="built_in">list</span>):</span><br><span class="line">    <span class="comment"># @postinglist: 每一个文本进行分词后的结果</span></span><br><span class="line">    <span class="comment"># @classvec: 文本变量的标签</span></span><br><span class="line">    <span class="comment"># 数据集中分为了10类，这里的postinglist我打算使用训练集的所有数据。</span></span><br><span class="line">    <span class="comment"># 类别的数字为0-9</span></span><br><span class="line">    postingList = contents.to_list()</span><br><span class="line">    postingList = [item.split() <span class="keyword">for</span> item <span class="keyword">in</span> postingList]</span><br><span class="line">    classVec = label    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> postingList, classVec</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建词汇表</span></span><br><span class="line">    <span class="comment"># 集合结构内元素的唯一性，创建一个包含所有词汇的词表。</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">createVocabList</span>(<span class="params">dataSet</span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">    vocabSet = <span class="built_in">set</span>([])  <span class="comment"># 建立一个空列表</span></span><br><span class="line">    <span class="keyword">for</span> document <span class="keyword">in</span> dataSet:</span><br><span class="line">        vocabSet = vocabSet | <span class="built_in">set</span>(document) <span class="comment"># 合并两个集合</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">list</span>(vocabSet)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">setOfWords2Vec</span>(<span class="params">vocabList, inputSet</span>) -&gt; <span class="built_in">list</span>:</span><br><span class="line">    returnVec = [<span class="number">0</span>]*<span class="built_in">len</span>(vocabList)</span><br><span class="line">    <span class="keyword">for</span> word <span class="keyword">in</span> inputSet:</span><br><span class="line">        <span class="keyword">if</span> word <span class="keyword">in</span> vocabList:</span><br><span class="line">            returnVec[vocabList.index(word)] = <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;the word: %s is not in my Vocabulary!&quot;</span> % word)</span><br><span class="line">    <span class="keyword">return</span> returnVec</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行训练， 这里就是计算： 条件概率 和 先验概率</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">trainNB0</span>(<span class="params">trainMatrix, trainCategory</span>):</span><br><span class="line">    numTrainDocs = <span class="built_in">len</span>(trainMatrix)  <span class="comment"># 计算总的样本数量</span></span><br><span class="line">    <span class="comment"># 计算样本向量化后的长度， 这里等于词典长度。</span></span><br><span class="line">    numWords = <span class="built_in">len</span>(trainMatrix[<span class="number">0</span>])</span><br><span class="line">    <span class="comment"># 计算先验概率</span></span><br><span class="line">    pClass = [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> trainCategory:</span><br><span class="line">        pClass[each] += <span class="number">1</span></span><br><span class="line">    pClass = [each / <span class="built_in">float</span>(numTrainDocs) <span class="keyword">for</span> each <span class="keyword">in</span> pClass]</span><br><span class="line">    <span class="comment"># 进行初始化， 用于向量化后的样本 累加， 为什么初始化1不是全0， 防止概率值为0.  </span></span><br><span class="line">    pNums = [np.ones(numWords) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">    <span class="comment"># 初始化求条件概率的分母为2， 防止出现0，无法计算的情况。</span></span><br><span class="line">    pDenoms = [<span class="number">2.0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">    <span class="comment"># 遍历所有向量化后的样本， 并且每个向量化后的长度相等， 等于词典长度。</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numTrainDocs):</span><br><span class="line">        <span class="comment"># 统计标签为1的样本： 向量化后的样本的累加， 样本中1总数的求和， 最后相除取log就是条件概率。 </span></span><br><span class="line">        pNums[trainCategory[i]] += trainMatrix[i]</span><br><span class="line">        pDenoms[trainCategory[i]] += <span class="built_in">sum</span>(trainMatrix[i])</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 求条件概率。</span></span><br><span class="line"></span><br><span class="line">    pVects = [np.log(pNums[i] / pDenoms[i]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>)]</span><br><span class="line">    <span class="comment"># 返回条件概率 和 先验概率</span></span><br><span class="line">    <span class="keyword">return</span> pVects, pClass</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_max_index</span>(<span class="params">lst</span>):</span><br><span class="line">    max_value = <span class="built_in">max</span>(lst)</span><br><span class="line">    max_index = lst.index(max_value)</span><br><span class="line">    <span class="keyword">return</span> max_index</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里分类的逻辑需要改</span></span><br><span class="line"><span class="comment"># 通过条件概率 和 先验概率 对新的样本进行向量化后分类。哪个类别的概率大，则属于哪个类别</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">classifyNB</span>(<span class="params">vec2Classify, pVs, pClass1</span>):</span><br><span class="line">    <span class="comment"># 向量化后的样本 分别 与 各类别的条件概率相乘 加上先验概率取log，之后进行大小比较, 输出类别。</span></span><br><span class="line"></span><br><span class="line">    ps = [<span class="built_in">sum</span>(vec2Classify * pVs[i]) + np.log(pClass1[i]) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(pVs))]</span><br><span class="line">    <span class="keyword">return</span> get_max_index(ps)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">testingNB</span>(<span class="params">train_content, label, test_content</span>):</span><br><span class="line">    categories = [<span class="string">&#x27;体育&#x27;</span>, <span class="string">&#x27;财经&#x27;</span>, <span class="string">&#x27;房产&#x27;</span>, <span class="string">&#x27;家居&#x27;</span>, <span class="string">&#x27;教育&#x27;</span>, <span class="string">&#x27;科技&#x27;</span>, <span class="string">&#x27;时尚&#x27;</span>, <span class="string">&#x27;时政&#x27;</span>, <span class="string">&#x27;游戏&#x27;</span>, <span class="string">&#x27;娱乐&#x27;</span>]</span><br><span class="line">    <span class="comment"># 生成训练样本 和 标签</span></span><br><span class="line">    listOPosts, listClasses = loadDataSet(train_content, label)</span><br><span class="line">    <span class="comment"># 创建词典</span></span><br><span class="line">    myVocabList = createVocabList(listOPosts)</span><br><span class="line">    <span class="comment"># 用于保存样本转向量之后的</span></span><br><span class="line">    trainMat=[]</span><br><span class="line">    <span class="comment"># 遍历每一个样本， 转向量后， 保存到列表中。</span></span><br><span class="line">    <span class="keyword">for</span> postinDoc <span class="keyword">in</span> listOPosts:</span><br><span class="line">        trainMat.append(setOfWords2Vec(myVocabList, postinDoc))</span><br><span class="line">    <span class="comment"># 计算 条件概率 和 先验概率</span></span><br><span class="line">    pVs, pClass = trainNB0(np.array(trainMat), np.array(listClasses))</span><br><span class="line">    <span class="comment"># 给定测试样本 进行测试</span></span><br><span class="line">    testEntry = test_content.to_list()</span><br><span class="line">    testEntry = [item.split() <span class="keyword">for</span> item <span class="keyword">in</span> testEntry]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">len</span>(testEntry):</span><br><span class="line">        thisDoc = np.array(setOfWords2Vec(myVocabList, testEntry[i]))</span><br><span class="line">        <span class="built_in">print</span>(testEntry,<span class="string">&#x27;classified as: &#x27;</span>, categories[classifyNB(thisDoc, pVs, pClass)])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;data_tfidf_2.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        tfidf_data = pickle.load(f)</span><br><span class="line">    X = tfidf_data[<span class="number">0</span>]</span><br><span class="line">    y = tfidf_data[<span class="number">1</span>] <span class="comment"># X为特征矩阵，y为标签 X.shape[0]为样本的数量，X.shape[1]为特征的数量,y代表了每个样本所属第几类</span></span><br><span class="line">    train_contents = tfidf_data[<span class="number">3</span>]</span><br><span class="line">    test_contents = tfidf_data[<span class="number">4</span>]</span><br><span class="line">    testingNB(train_contents, y,test_contents)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2><span id="0x03-加速">0x03 加速</span></h2><ol><li>全局变量优化</li><li>模块和函数属性访问优化</li><li>将训练的结果保存下来</li></ol><h2><span id="0x04">0x04</span></h2><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E7%BD%91%E7%BB%9C%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8/">网络内容安全</category>
      
      
      
      <comments>http://www.warmfire.com/2023/10/18/%E8%B4%9D%E5%8F%B6%E6%96%AF%E4%B8%AD%E6%96%87%E6%96%87%E6%9C%AC%E5%88%86%E7%B1%BB/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>安全协议第七周学习日志</title>
      <link>http://www.warmfire.com/2023/10/17/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/17/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Tue, 17 Oct 2023 02:01:05 GMT</pubDate>
      
      <description>&lt;p&gt;0x00 前言&lt;/p&gt;
&lt;p&gt;安全多方计算&lt;/p&gt;
&lt;p&gt;秘密共享&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>0x00 前言</p><p>安全多方计算</p><p>秘密共享</p><span id="more"></span><h1><span id="安全多方计算">安全多方计算</span></h1><h2><span id="0x01-基本概念">0x01 基本概念</span></h2><ul><li>信任环境或整体安全定义通常由真实-理想模型来表达</li><li>该模型下的安全性：真实环境下的敌手无法产生比理想环境下的攻击者更多的危害</li><li>根据攻击者能力定义两种不同攻击者的安全模型<ul><li>半诚实模型（更关注性能</li><li>恶意行为模型（更关注安全</li><li>大规模的安全多方计算产品，通常只考虑半诚实模型</li></ul></li><li>方法主要分为两类：<ul><li>基于噪音的安全计算方法<ul><li>代表是差分隐私</li></ul></li><li>非噪音方法<ul><li>编码或加密</li><li>代表性工作：混淆电路、同态加密、密钥分享</li></ul></li><li>优点：安全性有保证</li><li>缺点：计算量、通讯量大</li></ul></li><li>安全多方计算技术是一系列技术组成的协议栈，按层次分为2层<ul><li>支撑技术层<ul><li>MPC基础技术实现</li></ul></li></ul></li></ul><h2><span id="0x02">0x02</span></h2><h2><span id="0x03-基础技术">0x03 基础技术</span></h2><h3><span id="秘密分享-ss-secret-sharing">秘密分享 SS Secret Sharing</span></h3><h3><span id="不经意传输-ot-oblivious-transfer">不经意传输 OT oblivious transfer</span></h3><h3><span id="混淆电路-gc-garbled-circuit">混淆电路 GC Garbled Circuit</span></h3><h3><span id="同态加密-he-homomorphic-encryption">同态加密 HE Homomorphic Encryption</span></h3><h2><span id="0x04-应用">0x04 应用</span></h2><h1><span id="秘密分享">秘密分享</span></h1><h2><span id="0x01-基本概念">0x01 基本概念</span></h2><h1><span id="认证密钥协商协议">认证密钥协商协议</span></h1><p>​    在实际应用系统中，一般使用公钥密码或其他方法来确立一个适用于对称密码的共享密钥，即会话密钥 session key。建立这种仅用于一次会话的会话密钥机制就是密钥交换协议。所谓密钥交换 key exchange也称密钥协商 key agreement 是一种协议。</p><p>​    利用这种协议，通信双方在一个<strong>公开的</strong>信道上通过相互传递某些信息来<strong>共同建立</strong>一个<strong>共享的</strong>秘密密钥。</p><h2><span id="1-两方dh密钥协商">1 两方DH密钥协商</span></h2><h2><span id="2-mti密钥交换">2 MTI密钥交换</span></h2><h2><span id="3-ecmqv-密钥交换">3 ECMQV 密钥交换</span></h2><h2><span id="4-基于身份的密钥协商">4 基于身份的密钥协商</span></h2><h2><span id="5-三方密钥交换协议">5 三方密钥交换协议</span></h2><h2><span id="6-多方密钥交换协议">6 多方密钥交换协议</span></h2><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      
      
      <comments>http://www.warmfire.com/2023/10/17/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E4%B8%83%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>自然语言处理第六周学习日志</title>
      <link>http://www.warmfire.com/2023/10/13/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/13/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Fri, 13 Oct 2023 06:04:33 GMT</pubDate>
      
      <description>&lt;p&gt;0x00 前言&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>0x00 前言</p><span id="more"></span><h2><span id="0x01-概率论基础">0x01 概率论基础</span></h2><h3><span id="二项式分布">二项式分布</span></h3><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013141054803.png" alt="image-20231013141054803"></p><p>自然语言处理中，一般以句子为处理单位。假设一个句子独立于它前面的其他语句，句子的概率分布近似认为符合二项式分布。</p><h3><span id="期望">期望</span></h3><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013141209244.png" alt="image-20231013141209244"></p><h3><span id="方差">方差</span></h3><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013141507936.png" alt="image-20231013141507936"></p><h2><span id="0x02-信息论基础">0x02 信息论基础</span></h2><h3><span id="熵">熵</span></h3><h2><span id="0x03">0x03</span></h2><h2><span id="0x04">0x04</span></h2><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      
      
      <comments>http://www.warmfire.com/2023/10/13/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>可证明安全第六周学习日志</title>
      <link>http://www.warmfire.com/2023/10/11/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/11/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Wed, 11 Oct 2023 01:54:06 GMT</pubDate>
      
      <description>&lt;p&gt;0x00 前言&lt;/p&gt;
&lt;p&gt;对称加密&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>0x00 前言</p><p>对称加密</p><span id="more"></span><h2><span id="0x01-perfect-indistinguishability">0x01 Perfect Indistinguishability</span></h2><h2><span id="0x02-security-definition-of-encryption">0x02 Security Definition of Encryption</span></h2><h3><span id="definition-34-function-negligibility">Definition 3.4 function negligibility</span></h3><ul><li>A function $f : Z^+\rightarrow Z^+ $ is <strong>polynomical</strong> if there exists <em>c</em> such that $f(n) &lt; n^C$ for large enough <em>n</em> </li></ul><h3><span id="necessity-of-relaxations">Necessity of Relaxations</span></h3><ol><li>limit the time to defend the attack from an unbounded attacker</li><li>allow a very small probability of success to </li></ol><h3><span id="defintion-37-private-key-encryption-scheme">Defintion 3.7 Private-key encryption scheme</span></h3><h2><span id="0x03-eav-secure-encryption-schemes">0x03 EAV-Secure Encryption Schemes</span></h2><p>uniformity is not a property of a string, but a property of a distribution.</p><p>pseudorandomness is a property of a distribution not a string.</p><h2><span id="0x04-multiple-encryptions">0x04 Multiple Encryptions</span></h2><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8/">可证明安全</category>
      
      
      <category domain="http://www.warmfire.com/tags/%E5%AD%A6%E6%A0%A1%E8%AF%BE%E7%A8%8B/">学校课程</category>
      
      
      <comments>http://www.warmfire.com/2023/10/11/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>密码学竞赛代码记录</title>
      <link>http://www.warmfire.com/2023/10/10/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AB%9E%E8%B5%9B%E4%BB%A3%E7%A0%81%E8%AE%B0%E5%BD%95/</link>
      <guid>http://www.warmfire.com/2023/10/10/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AB%9E%E8%B5%9B%E4%BB%A3%E7%A0%81%E8%AE%B0%E5%BD%95/</guid>
      <pubDate>Tue, 10 Oct 2023 02:09:23 GMT</pubDate>
      
      <description>&lt;p&gt;0x00 前言&lt;/p&gt;
&lt;p&gt;记录emp-ot的代码情况&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>0x00 前言</p><p>记录emp-ot的代码情况</p><span id="more"></span><h2><span id="论文伪代码">论文伪代码</span></h2><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231012105749879.png" alt="image-20231012105749879"></p><p>表一：COT函数</p><p>$\Delta$由S生成</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231012105916449.png" alt="image-20231012105916449"></p><p>表二：流程图</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231012110027949.png" alt="image-20231012110027949"></p><p>表三：SPCOT</p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231012110243621.png" alt="image-20231012110243621"></p><p>表四：MPCOT </p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231012110340328.png" alt="image-20231012110340328"></p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231012110550394.png" alt="image-20231012110550394"></p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231012110646401.png" alt="image-20231012110646401"></p><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231012110738103.png" alt="image-20231012110738103"></p><h2><span id="0x02-修改思路">0x02 修改思路</span></h2><p>将 <code>spcot_recver</code> <code>spcot_sender</code> <code>iknp</code>  <code>base_cot</code> <code>co</code> <code>cot</code>放入TCO</p><p>将 <code>mpcot_reg</code> ``</p><p>lib BaseOT.h 与 emp ot.h\co.h 干的一件事</p><p>emp inkp 在 lib 的Iknp中有文件，分为了rcv\send</p><p>emp base_cot 引用Iknp </p><h2><span id="0x03">0x03</span></h2><h2><span id="0x04">0x04</span></h2><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E7%AB%9E%E8%B5%9B/">竞赛</category>
      
      <category domain="http://www.warmfire.com/categories/%E7%AB%9E%E8%B5%9B/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AB%9E%E8%B5%9B/">密码学竞赛</category>
      
      
      
      <comments>http://www.warmfire.com/2023/10/10/%E5%AF%86%E7%A0%81%E5%AD%A6%E7%AB%9E%E8%B5%9B%E4%BB%A3%E7%A0%81%E8%AE%B0%E5%BD%95/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>安全协议第六周学习日志</title>
      <link>http://www.warmfire.com/2023/10/10/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/10/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Tue, 10 Oct 2023 01:44:56 GMT</pubDate>
      
      <description>&lt;p&gt;0x00 前言&lt;/p&gt;
&lt;p&gt;形式化分析工具 &lt;code&gt;Scyther&lt;/code&gt;的安全协议实例分析&lt;/p&gt;
&lt;p&gt;可证明安全理论&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>0x00 前言</p><p>形式化分析工具 <code>Scyther</code>的安全协议实例分析</p><p>可证明安全理论</p><span id="more"></span><h2><span id="0x01-scyther-工具简介">0x01 Scyther 工具简介</span></h2><p>用于自动验证安全协议的工具</p><h2><span id="0x02-scyther-使用方法">0x02 Scyther 使用方法</span></h2><h3><span id="描述语法">描述语法</span></h3><h2><span id="0x03-scyther-应用分析实例">0x03 Scyther 应用分析实例</span></h2><h1><span id="可证明安全理论">可证明安全理论</span></h1><h2><span id="不可区分性cpa">不可区分性CPA</span></h2><p>不可区分性 indistinguishability IND</p><p>0</p><h1><span id="比特承诺">比特承诺</span></h1><h2><span id="协议简介">协议简介</span></h2><h3><span id="基本思想">基本思想</span></h3><ul><li>Alice承诺者， Bob验证者</li><li>A发送给B一个证明</li></ul><p>两个阶段：承诺阶段、打开阶段</p><p>两个安全性质：隐藏性、绑定性</p><h2><span id="常用比特承诺协议">常用比特承诺协议</span></h2><h2><span id="协议应用">协议应用</span></h2><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE/">安全协议</category>
      
      
      <category domain="http://www.warmfire.com/tags/%E5%AD%A6%E6%A0%A1%E8%AF%BE%E7%A8%8B/">学校课程</category>
      
      
      <comments>http://www.warmfire.com/2023/10/10/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>数据库第六周学习日志</title>
      <link>http://www.warmfire.com/2023/10/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</link>
      <guid>http://www.warmfire.com/2023/10/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</guid>
      <pubDate>Sun, 08 Oct 2023 07:40:11 GMT</pubDate>
      
      <description>&lt;p&gt;前言&lt;/p&gt;
&lt;p&gt;关系数据库标准语言SQL&lt;/p&gt;</description>
      
      
      
      <content:encoded><![CDATA[<p>前言</p><p>关系数据库标准语言SQL</p><span id="more"></span><h2><span id="31-sql概述">3.1 SQL概述</span></h2><ul><li>SQL Structured Query Language<ul><li>结构化查询语言，是关系数据库的标准语言</li></ul></li><li>SQL是一个通用的、功能极强的关系数据库语言</li></ul><h3><span id="311-sql的起源和发展">3.1.1 SQL的起源和发展</span></h3><h3><span id="312-sql语言">3.1.2 SQL语言</span></h3><ol><li>综合统一<ul><li>数据定义DDL、数据操纵DML、数据控制DCL功能于一体，还有事务控制语言TCL</li><li>Data Definition Language: Create/Alter/Drop—schema定义</li><li>Data Manipulation Language: Insert/Select/Update/Delete — 数据查询及修改</li><li>Data Control Language: Grant/Revoke—权限修改</li><li>Transaction Control Language: Begin Transaction/Commit/Rollback—数据修改的原子性</li><li>可以独立完成数据库生命周期中的全部活动</li><li>可根据需要随时逐步修改模式，不影响运行</li><li>数据操作统一</li></ul></li><li>高度非过程化</li><li>面向集合的做做方法</li><li>以同一种语法结构提供多种使用方法<ul><li>SQL独立语言</li><li>SQL嵌入式语言</li><li>更多的采用数据库驱动程序API</li></ul></li><li>语言简洁<ul><li>核心功能只用9个动词<ul><li>Create、Alter、Drop</li><li>Insert、Delete、Update、Select</li><li>Grant、Revoke</li></ul></li></ul></li></ol><h3><span id="313-sql基本概念">3.1.3 SQL基本概念</span></h3><ul><li>基本表<ul><li>本身独立存在的表</li><li>SQL中一个关系对应一个基本表</li><li>一个基本表对应一个存储文件</li><li>一个表可以有若干索引</li></ul></li><li>存储文件<ul><li>逻辑结构 schema 组成了关系数据库的模式</li><li>物理结构</li><li>文件路径和文件名可由用户配置或指定</li><li></li></ul></li><li>视图<ul><li>从一个或几个基本表通过查询而导出的表</li><li></li><li>视图是虚表</li><li></li></ul></li></ul><h2><span id="32-学生-课程数据库">3.2 学生-课程数据库</span></h2><ul><li>学生-课程模式 S-T：<ul><li>学生表：Student(Sno, Sname, Ssex, Sage, Sdept)</li><li>课程表：Course(Cno,Cname,Cpno,Ccredit)</li><li>学生选课表：SC(Sno,Cno,Grade)</li></ul></li></ul><h2><span id="33-数据定义">3.3 数据定义</span></h2><h3><span id> </span></h3><ul><li>SQL 的数据定义功能<ul><li>模式定义<ul><li>定义结构和命名空间</li><li>RDBMS提供了一个层次化的数据库对象命名机制</li></ul></li><li>表定义</li><li>视图和索引的定义</li></ul></li></ul><h3><span id="331-模式的定义与删除">3.3.1 模式的定义与删除</span></h3><h4><span id="定义模式">定义模式</span></h4><p>定义模式实际上定义了一个命名空间</p><p>The schema containing object can be table, column, data type, view, stored procedures, relationships, primary key, foreign key. </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> SCHEMA <span class="operator">&lt;</span>SCHEMA_NAME<span class="operator">&gt;</span> <span class="keyword">AUTHORIZATION</span> <span class="operator">&lt;</span>USER_NAME<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h4><span id="删除模式">删除模式</span></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> SCHEMA <span class="operator">&lt;</span>SHEMA_NAME<span class="operator">&gt;</span> <span class="operator">&lt;</span>CASCADE<span class="operator">|</span>RESTRICT<span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><ul><li>CASCADE: 级联</li><li>RESTRICT：限制</li></ul><h4><span id="数据库连接的基本参数">数据库连接的基本参数</span></h4><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013160605003.png" alt="image-20231013160605003"></p><p>Oracle授权：</p><blockquote><p>GRANT CONNECT,RESOURCE,DBA TO <user_name></user_name></p></blockquote><h3><span id="332-基本表的定义-删除与修改">3.3.2 基本表的定义、删除与修改</span></h3><ul><li><p>定义基本表</p><blockquote><p>CREATE TABLE &lt;表名&gt;</p><p>(&lt;列名&gt;&lt;数据类型&gt;[&lt;列级完整性约束条件&gt;],&lt;列名&gt;&lt;数据类型&gt;[&lt;列级完整性约束条件&gt;],…,[&lt;表级约束条件&gt;])    </p></blockquote><ul><li></li></ul></li></ul><ol><li>数据类型<ul><li>域的概念：SQL用数据类型来实现</li><li>定义表的属性时，需要指明其数据类型及长度</li><li>选用哪种数据类型<ul><li>物理意义与格式</li><li>取值范围</li><li>是否允许为空</li></ul></li><li>字符串类型</li><li>日期与时间类型</li></ul></li></ol><h4><span id="修改基本表">修改基本表</span></h4><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013161732128.png" alt="image-20231013161732128"></p><h4><span id="删除基本表">删除基本表</span></h4><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013161751823.png" alt="image-20231013161751823"></p><h3><span id="333-索引的建立与删除">3.3.3 索引的建立与删除</span></h3><ul><li>建立索引的目的：加快查询速度</li><li>常见索引<ul><li>顺序文件上的索引</li><li>B+树索引</li><li>hash索引</li><li>bitmap索引</li></ul></li></ul><h4><span id="建立索引">建立索引</span></h4><ul><li>数据库管理员或表的属主可以建立索引</li><li>关系数据库管理系统自动完成维护索引</li></ul><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013161837333.png" alt="image-20231013161837333"></p><h4><span id="修改索引">修改索引</span></h4><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013161852062.png" alt="image-20231013161852062"></p><h4><span id="删除索引">删除索引</span></h4><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013161909044.png" alt="image-20231013161909044"></p><h3><span id="334-数据字典">3.3.4 数据字典</span></h3><p>数据字典是关系数据库管理系统内部的一组系统表，记录了数据库中所有定义信息</p><h2><span id="34-数据查询">3.4 数据查询</span></h2><ul><li>语句格式</li></ul><p><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013161932540.png" alt="image-20231013161932540"></p><h3><span id="341-单表查询">3.4.1 单表查询</span></h3><ol><li>选择表中若干列<ul><li>使用列别名改变查询结果的列标题</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013162507827.png" alt="image-20231013162507827"></li></ul></li><li>选择表中若干元组<ul><li>消除取值重复的行：指定DISTINCT关键字</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013162632798.png" alt="image-20231013162632798"></li><li>%代表任意长度的字符串</li><li>_代表任意单个字符</li><li>MySQL/Oracle缺省的转义字符是’\’</li><li>IS NULL 不能用 = 代替</li></ul></li><li>ORDER BY 子句<ul><li>ASC：升序（缺省）</li><li>DESC：降序</li></ul></li><li>聚集函数<ul><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013163400697.png" alt="image-20231013163400697"></li></ul></li><li>GROUP BY子句<ul><li>分组：细化聚集函数的作用对象</li><li>按指定的一列或多列值分组，值相等的为一组</li><li><img src="http://warmfire-store.oss-cn-beijing.aliyuncs.com//img/image-20231013164746552.png" alt="image-20231013164746552"></li><li>HAVING作用于组</li></ul></li></ol><p>COUNT(*)会统计NULL的记录数量</p><h3><span id="342-连接查询">3.4.2 连接查询</span></h3><h3><span id="343-嵌套查询">3.4.3 嵌套查询</span></h3><h3><span id="344-集合查询">3.4.4 集合查询</span></h3><h3><span id="345-基于派生表的查询">3.4.5 基于派生表的查询</span></h3><h3><span id="346-select语句的一般形式">3.4.6 Select语句的一般形式</span></h3><h2><span id="35-数据更新">3.5 数据更新</span></h2><h2><span id="36-空值的处理">3.6 空值的处理</span></h2><h2><span id="37-视图">3.7 视图</span></h2><hr>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%BA%93/">数据库</category>
      
      
      <category domain="http://www.warmfire.com/tags/%E5%AD%A6%E6%A0%A1%E8%AF%BE%E7%A8%8B/">学校课程</category>
      
      
      <comments>http://www.warmfire.com/2023/10/08/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E5%85%AD%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Environment Blog</title>
      <link>http://www.warmfire.com/2023/10/08/Environment-Blog/</link>
      <guid>http://www.warmfire.com/2023/10/08/Environment-Blog/</guid>
      <pubDate>Sun, 08 Oct 2023 01:40:19 GMT</pubDate>
      
      <description>记录配置环境中遇到的错误</description>
      
      
      
      <content:encoded><![CDATA[<h2><span id="q1e-release-file-for-httpsmirrorstunatsinghuaeducnubuntudistsbionic-updatesinrelease-is-not-valid-yet-invalid-for-another-6h-46min-10s-updates-for-this-repository-will-not-be-applied">Q1：E: Release file for  is not valid yet (invalid for another 6h 46min 10s). Updates for this repository will not be applied.</span></h2><p>参考教程：<a href="https://askubuntu.com/questions/1096930/sudo-apt-update-error-release-file-is-not-yet-valid">sudo apt 更新错误：“发布文件尚未生效” - 询问 Ubuntu (askubuntu.com)</a></p><h2><span id="q2e-unable-to-correct-problems-you-have-held-broken-packages">Q2：E: Unable to correct problems, you have held broken packages.</span></h2><p>当apt破损时，可能的一个原因是由于 <code>/etc/apt/source.list</code>的源不是ubuntu 20.04的</p><span id="more"></span><h2><span id="0x01">0x01</span></h2><h2><span id="0x02">0x02</span></h2><h2><span id="0x03">0x03</span></h2><h2><span id="0x04">0x04</span></h2><p><hr><br>版权信息</p>]]></content:encoded>
      
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/">学习</category>
      
      <category domain="http://www.warmfire.com/categories/%E5%AD%A6%E4%B9%A0/%E5%AE%9E%E8%B7%B5%E7%9F%A5%E8%AF%86/">实践知识</category>
      
      
      <category domain="http://www.warmfire.com/tags/%E7%8E%AF%E5%A2%83%E5%BC%80%E5%8F%91/">环境开发</category>
      
      
      <comments>http://www.warmfire.com/2023/10/08/Environment-Blog/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
