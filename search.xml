<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>图像处理与信息隐藏第四周学习日志</title>
      <link href="/2023/10/03/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/10/03/%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86%E4%B8%8E%E4%BF%A1%E6%81%AF%E9%9A%90%E8%97%8F%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="2-图像信息的基本知识"><a href="#2-图像信息的基本知识" class="headerlink" title="2 图像信息的基本知识"></a>2 图像信息的基本知识</h1><h2 id="2-2-图像数字化"><a href="#2-2-图像数字化" class="headerlink" title="2.2 图像数字化"></a>2.2 图像数字化</h2><p>图像数字化：将代表图像的连续信号转变为离散信号</p><p><strong>采样</strong>：图像在空间上的离散化</p><p><strong>量化</strong>：对样点灰度值的离散化过程。</p><p>为了适应数字计算机的处理，必须对连续图像函数进行<strong>空间和幅值</strong>数字化</p><p><strong>均匀量化</strong>：将样本连续灰度值等间隔分层量化方式</p><p><strong>非均匀量化</strong>：不等间隔分层量化方式</p><p><strong>量化误差</strong>：以有限个离散值来近似表示无限多个连续值，量化器输出与输入之间必然存在误差</p><p>量化分层越多，量化误差越小，但编码时占用比特数越多</p><p>按人的视觉特点的非均匀量化</p><h2 id="2-3-图像的噪声分析"><a href="#2-3-图像的噪声分析" class="headerlink" title="2.3 图像的噪声分析"></a>2.3 图像的噪声分析</h2><h3 id="2-3-1-噪声"><a href="#2-3-1-噪声" class="headerlink" title="2.3.1 噪声"></a>2.3.1 噪声</h3><p><img src="https://warmfire-store.oss-cn-beijing/img/噪声.png" alt="img1"></p><p>高斯噪声是应用最广的噪声模型</p><h3 id="2-3-2-图像噪声的分类"><a href="#2-3-2-图像噪声的分类" class="headerlink" title="2.3.2 图像噪声的分类"></a>2.3.2 图像噪声的分类</h3><p>根据噪声的产生原因</p><ul><li>外部噪声</li><li>内部噪声</li></ul><p>根据统计理论观点</p><ul><li>平稳噪声：不随时间变化</li><li>非平稳噪声：随</li></ul><p>根据噪声幅度分布</p><ul><li>高斯噪声</li><li>瑞利噪声</li><li>伽马噪声</li></ul><p>根据频谱形状</p><ul><li>白噪声：频谱均匀分布</li><li>1/f噪声：频谱与频率成分反比</li><li>三角噪声：与频率平方成正比的噪声</li></ul><p>根据噪声与图像的结合方式</p><ul><li>加性噪声：输出图像为S(t)+n(t)</li><li>乘性噪声：S(t)(1+n(t))</li></ul><p>为了分析处理方便，</p><ol><li>往往将乘性噪声近似认为是加性噪声</li><li>信号和噪声是互相统计独立的</li></ol><h2 id="2-4-图像质量评价"><a href="#2-4-图像质量评价" class="headerlink" title="2.4 图像质量评价"></a>2.4 图像质量评价</h2><h3 id="2-4-1-概述"><a href="#2-4-1-概述" class="headerlink" title="2.4.1 概述"></a>2.4.1 概述</h3><p>图像质量评价的主要方法：</p><ul><li>客观评价方法<ul><li>实现容易</li><li>可消除不确定行</li><li>不一定反应真实质量</li></ul></li><li>主观评价方法<ul><li>实现困难</li><li>受其他因素影响大</li><li>像评估的最终目标</li></ul></li></ul><h3 id="2-4-2-图像质量的主观评价"><a href="#2-4-2-图像质量的主观评价" class="headerlink" title="2.4.2 图像质量的主观评价"></a>2.4.2 图像质量的主观评价</h3><p>主观评价方法：</p><ol><li>由ITU制定了图像主观评价的标准</li><li>至少挑选10观察者</li><li>测试条件应尽可能与使用条件相匹配</li><li>调查</li><li>设计评分表</li><li>结果分析，MOS Mean Option Score， DMOS Differential Mean Option Score</li></ol><p><img src="https://warmfire-store.oss-cn-beijing/img/DMOS.png" alt="img2"></p><p>DMOS值越大说明视频越好</p><p><strong>灰度图像的失真度量</strong></p><ol><li><p>归一化的均方误差</p><p><img src="https://warmfire-store.oss-cn-beijing/img/NMSE.png" alt="img3"></p></li><li><p>峰值均方误差</p><p><img src="https://warmfire-store.oss-cn-beijing/img/PMSE.png" alt="img4"></p></li><li><p>等效的峰值信噪比</p><p><img src="https://warmfire-store.oss-cn-beijing/img/PSNR.png" alt="img5"></p></li></ol><h3 id="2-4-3-图像保真度的测量"><a href="#2-4-3-图像保真度的测量" class="headerlink" title="2.4.3 图像保真度的测量"></a>2.4.3 图像保真度的测量</h3><p>保真度并与一定能够反应图像主观质量</p><p><strong>亮度的量度</strong></p><p>人的感觉亮度和亮度y基本称对数关系</p><script type="math/tex; mode=display">\Delta(L_1,L_2) = \log_B{(y+\Delta y)} - \log_B(y)</script><p><strong>彩色的量度</strong></p><p>人的彩色感觉：红、绿、蓝</p><ul><li>RGB模式：加式模式</li><li>CMYK模式：印刷彩色，减式模式，反射光</li></ul><h2 id="2-5-彩色图像基本知识"><a href="#2-5-彩色图像基本知识" class="headerlink" title="2.5 彩色图像基本知识"></a>2.5 彩色图像基本知识</h2><ol><li><p>YIQ</p><p><img src="https://warmfire-store.oss-cn-beijing/img/YIQ.png" alt="img6"></p></li><li><p>YUV</p><p><img src="https://warmfire-store.oss-cn-beijing/img/YUV.png" alt="img7"></p></li><li><p>YCbCr</p><p><img src="https://warmfire-store.oss-cn-beijing/img/YCbCr.png" alt="img8"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 图像处理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库第四周学习日志</title>
      <link href="/2023/09/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/30/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="第二章-关系数据库"><a href="#第二章-关系数据库" class="headerlink" title="第二章 关系数据库"></a>第二章 关系数据库</h1><h2 id="2-1-关系数据结构及形式化定义"><a href="#2-1-关系数据结构及形式化定义" class="headerlink" title="2.1 关系数据结构及形式化定义"></a>2.1 关系数据结构及形式化定义</h2><h3 id="2-1-1-关系"><a href="#2-1-1-关系" class="headerlink" title="2.1.1 关系"></a>2.1.1 关系</h3><p>单一的数据结构——关系</p><p>现实世界的<strong>实体以及实体间的各种联系</strong>均用关系来表示</p><p>关系的组成：同一类实体型的实例集合</p><p>关系之间的联系：实体与实体之间、实体的属性之间存在某种关联关系</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网络安全创新实验学习日志</title>
      <link href="/2023/09/29/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%88%9B%E6%96%B0%E5%AE%9E%E9%AA%8C%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/29/%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%88%9B%E6%96%B0%E5%AE%9E%E9%AA%8C%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<blockquote><p>目前来看网络安全创新实验中给出的例子还是很不错的，既能够初步明白怎么用，还能在具体的应用环境中实现。-20230929</p></blockquote><h2 id="Lab-2"><a href="#Lab-2" class="headerlink" title="Lab-2"></a>Lab-2</h2><h3 id="4-4-MD5算法碰撞实验"><a href="#4-4-MD5算法碰撞实验" class="headerlink" title="4.4 MD5算法碰撞实验"></a>4.4 MD5算法碰撞实验</h3><h4 id="4-4-1-MD5碰撞工具的使用"><a href="#4-4-1-MD5碰撞工具的使用" class="headerlink" title="4.4.1 MD5碰撞工具的使用"></a>4.4.1 MD5碰撞工具的使用</h4><p>快速MD5碰撞生成工具来生成两个拥有相同MD5值的不同文件。这两个文件的开始部分是相同的。因此需要指定前缀：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Lab2/hashclash/ipc_workdir/</span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;prefix&quot;</span> &gt; [prefix_file]</span><br><span class="line">../scripts/poc_no.sh [prefix_file]</span><br></pre></td></tr></table></figure><p>可以通过一下命令来验证文件是否内容不同而MD5值相同。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 比较两个文件是否相同</span><br><span class="line">diff -q collision1.bin collision2.bin</span><br><span class="line">ghex -C collision1.bin</span><br><span class="line"><span class="built_in">md5sum</span> collision1.bin collision2.bin</span><br></pre></td></tr></table></figure><p>如果是64字节的倍数，则会正常处理；如果不是64的倍数，则会去除多余的部分。</p><h4 id="4-4-2-MD5特性探究"><a href="#4-4-2-MD5特性探究" class="headerlink" title="4.4.2 MD5特性探究"></a>4.4.2 MD5特性探究</h4><p>两个相同MD5值的文件加上相同的后缀T会生成两个具有相同哈希值的文件。</p><blockquote><p>cat file1 file2 &gt; file3</p></blockquote><p>将两个文件合并到另一个文件</p><h4 id="4-4-3-产生相同MD5哈希值的两个可执行文件"><a href="#4-4-3-产生相同MD5哈希值的两个可执行文件" class="headerlink" title="4.4.3 产生相同MD5哈希值的两个可执行文件"></a>4.4.3 产生相同MD5哈希值的两个可执行文件</h4><p>利用gcc编译文件的命令如下：</p><blockquote><p>gcc [input_file] -o [output_file]</p></blockquote><p>编译后的文件可以直接运行</p><blockquote><p>./program.out</p></blockquote><p>赋予执行权限</p><blockquote><p>chmod +x [file_name]</p></blockquote><p>验证是否满足要求：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">md5sum</span> program_col1.bin program_col2.bin</span><br><span class="line"><span class="built_in">echo</span> $(./program_col1.bin) | <span class="built_in">md5sum</span></span><br><span class="line"><span class="built_in">echo</span> $(./program_col2.bin) | <span class="built_in">md5sum</span></span><br></pre></td></tr></table></figure><p>接下来用head/tail命令来分割文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 将a.out前3200byte输入到prefix文件中</span><br><span class="line"><span class="built_in">head</span> -c 3200 a.out &gt; prefix</span><br><span class="line">// a.out 后 100字节输入到suffix</span><br><span class="line"><span class="built_in">tail</span> -c 100 a.out &gt; suffix</span><br><span class="line">// a.out 从第3300字节开始至结尾的内容输入到suffix文件中</span><br><span class="line"><span class="built_in">tail</span> -c +3300 a.out &gt; suffix</span><br></pre></td></tr></table></figure><h2 id="Lab-3"><a href="#Lab-3" class="headerlink" title="Lab-3"></a>Lab-3</h2><h3 id="4-3-PKI实验"><a href="#4-3-PKI实验" class="headerlink" title="4.3 PKI实验"></a>4.3 PKI实验</h3><p>PKI利用CA将用户身份与公钥结合，解决公钥可信性问题。</p><p>CA是一个签发电子证书的可信实体。</p><h4 id="4-3-1-建立CA"><a href="#4-3-1-建立CA" class="headerlink" title="4.3.1 建立CA"></a>4.3.1 建立CA</h4><p>将<code>openssl</code>提供的配置文件<code>/usr/lib/ssl/openssl.cnf</code>拷贝进入目录，并且根据配置文件中的要求（[CA_default]）创建以下文件夹或文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dir =./demoCA# dir, store all files</span><br><span class="line">certs=$dir/certs    # dir, store all certs</span><br><span class="line">crl_dir    =$dir/crl    # dir, store the list of revocation key list</span><br><span class="line">new_certs_dir    =$dir/newcerts #dir, store new certs</span><br><span class="line">database =$dir/index.txt  #file, the index file of database</span><br><span class="line">serial   =$dir/serial   #file, store relevant serial number</span><br></pre></td></tr></table></figure><p>其中，<code>index.txt</code>仅需创建一个空文件，<code>serial</code>文件创建后需要输入偶数位的16进制数字</p><p>之后CA先生成自签名证书，该证书证明CA是可信的，并称为根证书：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># openssl req生成自签名证书</span></span><br><span class="line">openssl req -new -x509 -keyout ca.key -out ca.crt -config openssl.cnf</span><br><span class="line"><span class="comment"># -new 创建一个证书请求文件，若之后指定了-x509，代表创建自签名证书文件</span></span><br><span class="line"><span class="comment"># -keyout [file]  指定自动创建私钥时私钥的输出文件</span></span><br><span class="line"><span class="comment"># -out [file] 指定证书请求或自签名证书的输出文件</span></span><br><span class="line"><span class="comment"># config [file]  指定req命令的配置文件</span></span><br></pre></td></tr></table></figure><blockquote><p>自签名 SSL 证书是一种数字证书，未经公开信任的证书颁发机构 (CA) 签名。自签名证书被认为不同于传统的 CA 签名证书，因为它们是由负责与证书关联的网站或软件的公司或开发人员创建、颁发和签名的，而不是 CA。</p><p>在高层次上，这些自签名证书基于与 X.509 证书中使用的相同的加密私钥和公钥对体系结构。但是，这些数字证书没有受信任的第三方 CA 的验证。发行过程中缺乏独立验证会产生额外的风险，这就是自签名证书的问题。对于面向公众的网站和应用程序，它们被认为是不安全的。</p></blockquote><p>可以用 <code>openssl x509 -noout -text -in ca.crt</code>来查看证书信息</p><h4 id="4-3-2-利用CA签发证书"><a href="#4-3-2-利用CA签发证书" class="headerlink" title="4.3.2 利用CA签发证书"></a>4.3.2 利用CA签发证书</h4><p>网站PKILab.com，需要从CA处取得电子证书：</p><p>首先，生成自己的公私钥对 <code>openssl genrsa -aes128 -out server.key 2048</code></p><p>生成公私钥对后，同时将私钥用AES128加密存储在<code>server.key</code>文件中。</p><p>通过 <code>openssl rsa -in server.key -text</code>查看密钥信息</p><p>其次，PKILab.com需要生成证书请求文件（CSR）。该文件包含了PKILab.com的公钥，并被发送给CA，请求CA对公钥进行签名：</p><p><code>openssl req -new -key server.key -out server.csr -config openssl.cnf</code></p><p>CA收到csr请求文件后，利用自己的私钥ca.key与证书ca.crt，签名并生成server.crt:</p><p><code>openssl ca -in server.csr -out server.crt -cert ca.crt -keyfile ca.key -config openssl.cnf</code></p><h4 id="4-3-3-验证CA签发证书的签名"><a href="#4-3-3-验证CA签发证书的签名" class="headerlink" title="4.3.3 验证CA签发证书的签名"></a>4.3.3 验证CA签发证书的签名</h4><p>证书文件分为三部分，Data域、Signature Algorithm域、Signature Value域，Date域为证书的基本信息部分，也称作TBSCertificate（To-Be-Signed Certificate）。</p><p>寻找TBSCertificate位置的指令：<code>openssl x509 -in server.crt -inform pem -outform pem -out server.pem</code></p><p>以ASN.1格式解析PEM文件：<code>openssl asn1parse -i -in server.pem</code></p><p>根据解析信息提取TBSCertificate，保存为<code>server.tbs</code>文件：<code>openssl asn1parse -in server.pem -strparse 5 -out server.tbs</code></p><h4 id="4-3-4-将证书用于HTTPS-Web服务器"><a href="#4-3-4-将证书用于HTTPS-Web服务器" class="headerlink" title="4.3.4 将证书用于HTTPS Web服务器"></a>4.3.4 将证书用于HTTPS Web服务器</h4><p>首先，配置DNS服务。为了让虚拟机能够解析该域名，需要将<code>127.0.0.1 PKILab.com</code>填入虚拟机<code>/etc/hosts</code>文件中。</p><p>然后，基于之前生成的证书，使用指令建立一个Web简单服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 将密钥与证书合成为一个文件</span><br><span class="line"><span class="built_in">cp</span> server.key server.pem</span><br><span class="line"><span class="built_in">cat</span> server.crt &gt;&gt; server.pem</span><br><span class="line">//直接将crt拼接到pem后面</span><br><span class="line">// 利用 server.pem 建立一个Web服务器</span><br><span class="line">openssl s_server -cert server.pem -www</span><br></pre></td></tr></table></figure><h2 id="Homework-1"><a href="#Homework-1" class="headerlink" title="Homework-1"></a>Homework-1</h2><h3 id="1-1-产生两个程序行为不同的可执行文件"><a href="#1-1-产生两个程序行为不同的可执行文件" class="headerlink" title="1.1 产生两个程序行为不同的可执行文件"></a>1.1 产生两个程序行为不同的可执行文件</h3><h3 id="1-2-建立基于Apache的HTTPS网站"><a href="#1-2-建立基于Apache的HTTPS网站" class="headerlink" title="1.2-建立基于Apache的HTTPS网站"></a>1.2-建立基于Apache的HTTPS网站</h3><p>首先需要修改Apache配置文件，<strong>指定网站文件以及网站密钥与证书的存储位置。</strong></p><p>举个栗子~</p><p>要建立一个<code>example.com</code>的网站，需要在<code>/var/www</code>文件夹中新建一个名为<code>example</code>的文件夹，并在其中新建一个<code>index_https.html</code>。</p><p>之后就到了<strong>修改配置文件</strong><code>/etc/apache2/sites-available/&lt;your web&gt;.conf</code>的时候了</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:<span class="number">443</span>&gt;</span><br><span class="line"># *表示该配置适用与所有IP与<span class="number">443</span>端口的请求</span><br><span class="line"> ServerName example.com   </span><br><span class="line"> DocumentRoot /var/www/example</span><br><span class="line"> DirectoryIndex index_https.html</span><br><span class="line"></span><br><span class="line"> SSLEngine on</span><br><span class="line"> SSLCertificateFile   <span class="meta"># input the absolute path of the cert of your website </span></span><br><span class="line"> SSLCertificateKeyFile  <span class="meta"># input the absolute path of the key of your website</span></span><br><span class="line"></span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">SSLCipherSuite AES256-SHA # 指定加密组件</span><br></pre></td></tr></table></figure><blockquote><p> 至于网站证书应该如何生成以及密钥文件应该如何生成，请看Lab-3</p><p>AH00558: apache2: Could not reliably determine the server’s fully qualified domain name, using 127.0.1.1. Set the ‘ServerName’ directive globally to suppress this message<br>解决方案：</p><p>在/etc/apache2/apache2.cnf中添加</p><p>ServerName  your_server_name</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 实践知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>可证明安全第四周学习日志</title>
      <link href="/2023/09/27/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/27/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<p><strong>randomness extractor</strong></p><ul><li>Ext(X,seed)</li></ul><p>One-time pad</p><ul><li>limitations<ul><li>the key is <strong>as long as</strong> the message </li><li>only secure if each key is used to encrypt a <strong>single</strong> message</li><li>Trivially broken by a known-plaintext attack</li></ul></li></ul><p>Optimality of the one-time pad</p><p><strong>Theorem</strong></p><p>if (Gen,Enc,Dec) with message space M is perfectly secret, then $|K| \ge |M|$</p><h2 id="Perfect-Indistinguishability"><a href="#Perfect-Indistinguishability" class="headerlink" title="Perfect Indistinguishability"></a>Perfect Indistinguishability</h2><p>probability &gt; $2^{-60}$</p><p>Def. 2.6</p><p>$\Pi$ is perfectly indistinguishable if for all attackers $\mathcal{A}$, it holds that </p><script type="math/tex; mode=display">\Pr[PrivK^{eav}_{\mathcal{A},\Pi}] = \frac{1}{2}</script><h2 id="Security-Definition-of-Encryption"><a href="#Security-Definition-of-Encryption" class="headerlink" title="Security Definition of Encryption"></a>Security Definition of Encryption</h2><p>$k \leftarrow Gen(1^\lambda)$表示输入的长度是$\lambda$</p><p>two approaches:</p><ol><li>concrete security<ul><li>$(t,\epsilon)$<ul><li>fail probability $\epsilon$</li><li>run time $t$</li></ul></li><li>$\Pr[PrivK^{eav}_{\mathcal{A},\Pi}] \le 0.5 + \epsilon$</li></ul></li><li>Asymptotic security<ul><li>security parameter</li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>安全协议第四周学习日志</title>
      <link href="/2023/09/26/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/26/%E5%AE%89%E5%85%A8%E5%8D%8F%E8%AE%AE%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<p>安全协议分析假设密码学原语是安全的</p><blockquote><p>学习目标</p><p>理解并掌握BAN逻辑的基本框架</p><p>能够基于BAN逻辑进行分析</p></blockquote><h2 id="1-安全协议分析方法"><a href="#1-安全协议分析方法" class="headerlink" title="1 安全协议分析方法"></a>1 安全协议分析方法</h2><p>安全协议分析目的：证明安全协议的证明<strong>执行过程满足安全需求定义</strong></p><p>安全协议分析活动不仅包含安全协议设计迭代过程中的安全协议分析阶段，也包含<strong>需求定义阶段</strong></p><ul><li>证明协议不安全，找返利</li><li>证明协议安全，困难</li></ul><p>有五种基本方法</p><ol><li>可证明安全理论与方法<ul><li>本质上是一种公理化研究方法</li><li>利用归约论断指出挫败方案或协议的唯一方法是破译或解决极微本原</li><li>具有明确的安全定义和计算化的语义，难以进行自动化分析</li></ul></li><li>形式化分析理论与方法<ul><li>使协议设计者通过系统分析，将注意力集中于接口、系统环境的假设、系统在不同条件下的状态、条件不满足是系统出现的情况及系统不变的属性，并通过系统验证，提供安全保证</li><li>常见三种形式化分析方法<ol><li><strong>以BAN类逻辑为代表的基于推理结构性方法</strong>，运用逻辑系统</li><li><strong>基于攻击结构性方法</strong></li><li><strong>基于证明结构性方法</strong></li></ol></li><li><strong>易于自动化分析，没有计算化的语义</strong></li></ul></li><li>混合理论与方法</li><li>零只是证明理论与方法<ul><li>证明者试图使验证者相信某个论断正确，却不想验证者提供任何有用的信息</li></ul></li><li>安全多方计算理论与方法</li></ol><h2 id="2-BAN逻辑的基本框架"><a href="#2-BAN逻辑的基本框架" class="headerlink" title="2 BAN逻辑的基本框架"></a>2 BAN逻辑的基本框架</h2><p>BAN逻辑是一种分析认证协议的逻辑,是一种关于知识和信念的逻辑,包含每个主体各自维护的信念集合,以及从旧信念推导出新信念的推理规则集合</p><p>BAN逻辑旨在<strong>抽象层次上</strong>讨论认证协议的安全性</p><p>假设:</p><ol><li>时间假设</li><li>密钥假设</li><li>主题假设</li></ol><p><strong>重点部分:</strong></p><ol><li>BAN逻辑的语法和语义</li></ol><p><strong>消息含义规则</strong></p><p><strong>随机数验证规则</strong></p><p><strong>管辖规则</strong></p><p><strong>接收消息规则</strong></p><p><strong>新鲜性规则</strong></p><p><strong>信仰规则</strong></p><p><strong>密钥与秘密共享规则</strong></p><h2 id="3-应用BAN逻辑分析协议的方法"><a href="#3-应用BAN逻辑分析协议的方法" class="headerlink" title="3 应用BAN逻辑分析协议的方法"></a>3 应用BAN逻辑分析协议的方法</h2><p>初始假设环节可能出问题</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 安全协议 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>网络内容安全第四周学习日志</title>
      <link href="/2023/09/25/%E7%BD%91%E7%BB%9C%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/25/%E7%BD%91%E7%BB%9C%E5%86%85%E5%AE%B9%E5%AE%89%E5%85%A8%E7%AC%AC%E5%9B%9B%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h2 id="一、网络信息内容获取模型"><a href="#一、网络信息内容获取模型" class="headerlink" title="一、网络信息内容获取模型"></a>一、网络信息内容获取模型</h2><p><del><em>PPT乱七八糟绷不住了</em></del></p><h3 id="1-0-互联网信息类型"><a href="#1-0-互联网信息类型" class="headerlink" title="1.0 互联网信息类型"></a>1.0 互联网信息类型</h3><ul><li>网络媒体形态<ul><li>广播式媒体<ul><li>新闻网站、论坛、博客</li></ul></li><li>交互式媒体<ul><li>社交媒体、搜索引擎等</li></ul></li></ul></li><li>网络媒体信息<ul><li>互联网网站公开发布的信息，用户通常可以基于通用网络浏览器获取</li></ul></li><li>网络通信信息<ul><li>实现与特定点通信或点对点通信所交互的信息</li></ul></li><li>发布信息类型<ul><li>文本</li><li>图像</li><li>音频</li><li>视频</li></ul></li><li>媒体发布方式<ul><li>匿名</li><li>身份认证</li></ul></li><li>网页形态<ul><li>静态</li><li>动态：含“？”或输入参数的URL</li></ul></li><li>信息交互协议</li><li>专业客户端软件</li></ul><h3 id="1-1-网络信息内容获取模型"><a href="#1-1-网络信息内容获取模型" class="headerlink" title="1.1 网络信息内容获取模型"></a>1.1 网络信息内容获取模型</h3><p><img src="../images/网络环境下的信息内容获取模型.png" alt="img1"></p><p><strong>信息检索</strong> (Information Search， IS)是信息需求者主动搜寻所需要的信息</p><p><strong>信息推荐</strong></p><p><strong>信息交互</strong></p><p><strong>信息浏览</strong></p><h3 id="1-2-网络媒体信息获取原理"><a href="#1-2-网络媒体信息获取原理" class="headerlink" title="1.2 网络媒体信息获取原理"></a>1.2 网络媒体信息获取原理</h3><p><img src="../images/网络信息获取流程.png" alt="img2"></p><p>网上采集算法（爬虫）</p><h3 id="1-3-网络媒体信息获取的分类"><a href="#1-3-网络媒体信息获取的分类" class="headerlink" title="1.3 网络媒体信息获取的分类"></a>1.3 网络媒体信息获取的分类</h3><ol><li>全网信息获取</li><li>定点信息获取</li><li>基于主题的信息获取和元搜索<ul><li>元搜索又称多搜索引擎<ul><li>搜索机制分为并行式和串行式</li></ul></li><li>高级检索功能：<ul><li>使用布尔逻辑符检索</li><li>域名过滤</li><li>等等</li></ul></li></ul></li></ol><p>信息获取的技术难点</p><ul><li>网络媒体信息：形态各异、信息类型多样</li><li>DDOS</li></ul><h2 id="二、搜索引擎技术"><a href="#二、搜索引擎技术" class="headerlink" title="二、搜索引擎技术"></a>二、搜索引擎技术</h2><ul><li>网络内容分析</li><li>网页索引</li><li>查询解析</li><li>相关性计算</li></ul><h3 id="2-2-1-网上采集算法"><a href="#2-2-1-网上采集算法" class="headerlink" title="2.2.1 网上采集算法"></a>2.2.1 网上采集算法</h3><p>爬虫</p><p><img src="../images/爬虫原理.png" alt="img3"></p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li>通用网络爬虫</li><li>聚焦网络爬虫</li><li>增量式网络爬虫</li><li>深层网络爬虫</li></ul><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><ol><li>初始URL集合</li><li>信息获取</li><li>信息解析</li><li>信息判重<ol><li>URL判重</li><li>内容摘要判重</li></ol></li></ol><h4 id="URL爬取策略"><a href="#URL爬取策略" class="headerlink" title="URL爬取策略"></a>URL爬取策略</h4><ul><li>深度优先遍历策略</li><li>广度优先遍历策略</li><li>反向链接数策略：一个网页被其他网页链接指向的数量</li><li>Partial PageRank策略</li><li>OPIC策略 online page importance computation </li><li>大站优先策略</li></ul><h3 id="2-2-2-排级算法"><a href="#2-2-2-排级算法" class="headerlink" title="2.2.2 排级算法"></a>2.2.2 排级算法</h3><h4 id="PageRank"><a href="#PageRank" class="headerlink" title="PageRank"></a>PageRank</h4><p>原理：民主表决</p><p><img src="../images/PR算法.png" alt="img4"></p><script type="math/tex; mode=display">\Pr(t) = (1-d) + d(\sum_{i=1}^{n}{\frac{\Pr(t_i)}{|t_i|}})</script><p>$\Pr(t_i)$入度; $|t_i|$出度 $d$影响因子</p><font color="red">入度为什么是概率呢？</font><p>优点：</p><ol><li>直接高效</li><li>主题集中</li></ol><p>缺点：</p><ol><li>忽略网页内容，干扰挖掘结果</li><li>结果范围窄</li><li>影响因子与网页获取数量缺乏科学性</li></ol><p>用来表现网页等级的一个标准，0-10，值越高越受欢迎</p><h4 id="HITS"><a href="#HITS" class="headerlink" title="HITS"></a>HITS</h4><p><strong>Hub</strong>页面（枢纽页面）指向高质量链接的网页</p><p><strong>Authority</strong>页面（权威页面）相关领域高质量网页</p><p><strong>枢纽值</strong> Hub Scores = sum of all relevant Authority scores</p><p><strong>权威值</strong> Authority Scores = sum of all relevant Hub scores</p><p>基本思想：<strong>相互增强关系</strong></p><h5 id="算法"><a href="#算法" class="headerlink" title="算法"></a><strong>算法</strong></h5><ol><li>构建根集合</li><li>扩展集合Base</li><li>计算扩展集base中所有页面的Hub值和Authority值</li><li>排序，结果输出</li></ol><p><strong>优点</strong></p><ol><li>知识范围扩大</li><li>搜索时部分地考虑了页面内容，挖掘结果科学性大大增强</li></ol><p><strong>缺点</strong></p><ol><li>效率低，实时性差</li><li>主题漂移</li><li>易被操纵者操纵结果</li><li>结构不稳定</li></ol><h3 id="2-2-3-搜索引擎与垃圾消息关系"><a href="#2-2-3-搜索引擎与垃圾消息关系" class="headerlink" title="2.2.3 搜索引擎与垃圾消息关系"></a>2.2.3 搜索引擎与垃圾消息关系</h3><p>垃圾信息制造手段</p><ul><li>提高排名技术 boosting<ul><li>关键字垃圾 term spamming</li><li>链接垃圾 link spamming</li></ul></li><li>隐藏技术 hiding<ul><li>隐藏Boosting技术</li><li>content hiding、 cloaking、 redirection</li></ul></li></ul><h2 id="三、数据挖掘技术"><a href="#三、数据挖掘技术" class="headerlink" title="三、数据挖掘技术"></a>三、数据挖掘技术</h2><p>数据挖掘：通过从数据库中抽取<strong>隐含的</strong>、<strong>未知的</strong>、<strong>具有潜在使用价值</strong>的过程</p><h3 id="2-3-2-Web挖掘技术"><a href="#2-3-2-Web挖掘技术" class="headerlink" title="2.3.2 Web挖掘技术"></a>2.3.2 Web挖掘技术</h3>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 网络内容安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>工科数学分析第二章——数列极限</title>
      <link href="/2023/09/23/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/23/%E6%B7%91%E8%8A%AC%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h1 id="第2章-数列极限"><a href="#第2章-数列极限" class="headerlink" title="第2章 数列极限"></a>第2章 数列极限</h1><blockquote><p>为了避免形式主义的情况，这里主要记录一些容易以文字形式呈现或公式呈现不是特别困难的一些式子</p></blockquote><h2 id="2-1-数列的极限"><a href="#2-1-数列的极限" class="headerlink" title="2.1 数列的极限"></a>2.1 数列的极限</h2><h3 id="2-1-1数列极限的定义"><a href="#2-1-1数列极限的定义" class="headerlink" title="2.1.1数列极限的定义"></a>2.1.1数列极限的定义</h3><p>数列就是按照正整数编号的一列实数:</p><script type="math/tex; mode=display">a_1,a_2,\cdots,a_n,\cdots</script><p>通常记为$\{a_n\}_{n \geq 1}$或简记为$\{a_n\}$，其中$a_n$称为数列的通项</p><h4 id="定义2-1-1"><a href="#定义2-1-1" class="headerlink" title="定义2.1.1"></a>定义2.1.1</h4><p>设$\{a_n\}$是一个数列，a是一个给定的师叔，如果对任意给定的$\epsilon &gt; 0$，总存在一个正整数N，使得当$n&gt;N$时，$\left\vert a_n - a \right\vert &lt; \epsilon$，则称$\{a_n\}$收敛于a，或者称a为数列的极限，记为$\lim_{n \rightarrow \infty}{a_n = a}$</p><p>当数列有极限时，则称数列收敛，否则发散。</p><p><strong>e.g.</strong></p><p>设$a&gt;1$是给定的正数，证明$lim_{n \rightarrow \infty}{\frac{n}{a^n}} = 0$</p><p>由二项式定理证明指数表示成多项式的最高次幂高于任意的多项式</p><h3 id="2-1-2极限定义的否定形式"><a href="#2-1-2极限定义的否定形式" class="headerlink" title="2.1.2极限定义的否定形式"></a>2.1.2极限定义的否定形式</h3><script type="math/tex; mode=display">\lim_{n\rightarrow\infty}{a_n \neq a} \Leftrightarrow \exists \epsilon_0 > 0, s.t. \forall N \in N^*, \exists n_0 > N, \left\vert {a_{n_0} - a}\right\vert \ge \epsilon_0</script><h2 id="2-2-数列极限的性质和运算"><a href="#2-2-数列极限的性质和运算" class="headerlink" title="2.2 数列极限的性质和运算"></a>2.2 数列极限的性质和运算</h2><h4 id="定理2-2-1-极限唯一性"><a href="#定理2-2-1-极限唯一性" class="headerlink" title="定理2.2.1 极限唯一性"></a>定理2.2.1 极限唯一性</h4><p>收敛数列的极限是唯一的</p><h4 id="定义2-2-1"><a href="#定义2-2-1" class="headerlink" title="定义2.2.1"></a>定义2.2.1</h4><p>给定$\{a_n\}$，如果存在一个实数A，s.t.对所有的n都有$a_n \le  A (a_n \ge A)$，则称此数列有上界(下界)，A称为该数列的一个上界（下界），如果该数列既有上界又有下界，则称该数列有界</p><h4 id="定理2-2-2-有界性"><a href="#定理2-2-2-有界性" class="headerlink" title="定理2.2.2 有界性"></a>定理2.2.2 有界性</h4><p>收敛数列都是有界的</p><h4 id="定理2-2-3-保序性"><a href="#定理2-2-3-保序性" class="headerlink" title="定理2.2.3 保序性"></a>定理2.2.3 保序性</h4><ol><li>设$\lim_{n\rightarrow\infty}{a_n=a},\lim_{n\rightarrow\infty}{b_n=b}$，若$a&gt;b$，则$\exists N \in N^*, s.t. n&gt;N时, a_n&gt;b_n$</li><li>若$a_n\ge b_n(n=1,2,\cdots),\lim_{n\rightarrow\infty}{a_n}=a,\lim_{n\rightarrow\infty}{b_n=b}$，则$a\ge b$</li></ol><p><strong>推论（保号性）-简记</strong></p><ol><li>若a&gt;0,则$a_n &gt; 0$</li><li>若$a_n &gt; 0$,则a&gt;0</li></ol><h4 id="定义2-2-2"><a href="#定义2-2-2" class="headerlink" title="定义2.2.2"></a>定义2.2.2</h4><p>设$\{a_n\}$是一个数列，任给正整数列$n_1 &lt; n_2 &lt; n_3 &lt; \cdots$，称数列$a_{n_1},a_{n_2},a_{n_3},\cdots$为$\{a_n\}$的一个子列，记为$\{a_{n_k}\}$</p><h4 id="定理2-2-4-数列极限与子列极限的一致性"><a href="#定理2-2-4-数列极限与子列极限的一致性" class="headerlink" title="定理2.2.4 数列极限与子列极限的一致性"></a>定理2.2.4 数列极限与子列极限的一致性</h4><p>若$\{a_n\}$的极限为a，则他的任意子列极限也为a。</p><h4 id="定理2-2-5-数列极限的四则运算"><a href="#定理2-2-5-数列极限的四则运算" class="headerlink" title="定理2.2.5 数列极限的四则运算"></a>定理2.2.5 数列极限的四则运算</h4><ol><li>若$\lim_{n\rightarrow\infty}{a_n=a},\lim_{n\rightarrow\infty}{b_n=b}$，则数列$\{a_n \pm b_n\}$收敛，极限为$a \pm b$</li><li>若$\lim_{n\rightarrow\infty}{a_n=a},\lim_{n\rightarrow\infty}{b_n=b}$，则数列$\{a_n b_n\}$收敛，极限为ab</li><li>若$\lim_{n\rightarrow\infty}{a_n=a},\lim_{n\rightarrow\infty}{b_n=b\neq0}$，则数列$\{\frac{a_n}{b_n}\}$收敛，极限为$\frac{a}{b}$</li></ol><h4 id="定理2-2-6-夹逼定理"><a href="#定理2-2-6-夹逼定理" class="headerlink" title="定理2.2.6 夹逼定理"></a>定理2.2.6 夹逼定理</h4><p>假设数列$\{a_n\}$、$\{b_n\}$、$\{c_n\}$，满足$a_n\le b_n \le c_n$，且$\lim_{n\rightarrow\infty}{a_n=c_n=a}$则$b_n$极限也为a</p><h2 id="2-3-无穷小和无穷大"><a href="#2-3-无穷小和无穷大" class="headerlink" title="2.3 无穷小和无穷大"></a>2.3 无穷小和无穷大</h2><h3 id="2-3-1-无穷小"><a href="#2-3-1-无穷小" class="headerlink" title="2.3.1 无穷小"></a>2.3.1 无穷小</h3><h4 id="定义2-3-1-无穷小数列"><a href="#定义2-3-1-无穷小数列" class="headerlink" title="定义2.3.1 无穷小数列"></a>定义2.3.1 无穷小数列</h4><p>若数列$\{a_n\}$的极限为0，则成这个数列为无穷小数列，简称无穷小</p><h4 id="定理2-3-1"><a href="#定理2-3-1" class="headerlink" title="定理2.3.1"></a>定理2.3.1</h4><ol><li>数列$\{a_n\}$为无穷小的充要条件是$\{|a_n|\}$是无穷小</li><li>两个无穷小数列的和或差依旧是无穷小数列</li><li>设$\{a_n\}$为无穷小，$\{c_n\}$为有界数列，则$\{a_nc_n\}$为无穷小数列</li><li>设$0\le a_n \le b_n$若$\{b_n\}$为无穷小，则$\{a_n\}$也为无穷小</li><li>$\lim_{n\rightarrow\infty}{a_n=a} \Leftrightarrow \{a_n -a \}无穷小$</li></ol><h3 id="2-3-2-无穷大"><a href="#2-3-2-无穷大" class="headerlink" title="2.3.2 无穷大"></a>2.3.2 无穷大</h3><h4 id="定义2-3-2"><a href="#定义2-3-2" class="headerlink" title="定义2.3.2"></a>定义2.3.2</h4><p>设$\{a_n\}$是一个数列，如果对任意给定的整数M，总存在正整数N，使得当$n&gt;N$时，有$|a_n| &gt; M$，则称$\{a_n\}$无穷大，记为$\lim_{n\rightarrow\infty}{a_n =  \infty}$</p><h4 id="性质2-3-1"><a href="#性质2-3-1" class="headerlink" title="性质2.3.1"></a>性质2.3.1</h4><ol><li>$\{a_n\}$无穷大，则$\{a_n\}$无界</li><li>任何无界数列都有无穷大的子列</li><li>若$\{a_n\}$极限为正无穷，$\{b_n\}$极限为正无穷，则它们的和数列或奇数列也为无穷数列</li></ol><h4 id="性质2-3-2"><a href="#性质2-3-2" class="headerlink" title="性质2.3.2"></a>性质2.3.2</h4><p>$\{a_n\}$无穷大 等价于 $\{\frac{1}{a_n}\}$无穷小</p><h3 id="2-3-2-Stolz定理"><a href="#2-3-2-Stolz定理" class="headerlink" title="2.3.2 Stolz定理"></a>2.3.2 Stolz定理</h3><h4 id="定理2-3-2-frac-infty-infty"><a href="#定理2-3-2-frac-infty-infty" class="headerlink" title="定理2.3.2 $\frac{\infty}{\infty}$"></a>定理2.3.2 $\frac{\infty}{\infty}$</h4><p>设$\{b_n\}$是严格递增趋于正无穷的数列，如果</p><script type="math/tex; mode=display">\lim_{n\rarr\infty} \frac{a_n - a_{n-1}}{b_n-b_{n-1}} = A</script><p>则$\lim_{n\rightarrow\infty}\frac{a_n}{b_n}=A$</p><h4 id="定理2-3-3-frac-0-0"><a href="#定理2-3-3-frac-0-0" class="headerlink" title="定理2.3.3 $\frac{0}{0}$"></a>定理2.3.3 $\frac{0}{0}$</h4><p>设$\{b_n\}$ $\{a_n\}$都是无穷小的数列且$\{b_n\}$严格单调，如果</p><script type="math/tex; mode=display">\lim_{n\rarr\infty} \frac{a_n - a_{n-1}}{b_n-b_{n-1}} = A</script><p>则$\lim_{n\rightarrow\infty}\frac{a_n}{b_n}=A$</p><h2 id="2-4-单调数列的极限及其应用"><a href="#2-4-单调数列的极限及其应用" class="headerlink" title="2.4 单调数列的极限及其应用"></a>2.4 单调数列的极限及其应用</h2><h4 id="定义2-4-1-单调数列"><a href="#定义2-4-1-单调数列" class="headerlink" title="定义2.4.1 单调数列"></a>定义2.4.1 单调数列</h4><p>$a_n \le a_{n+1}$单调递增，$a_n &lt; a_{n+1}$ 严格单调</p><h4 id="定理2-4-1-单调有界定理"><a href="#定理2-4-1-单调有界定理" class="headerlink" title="定理2.4.1 单调有界定理"></a>定理2.4.1 单调有界定理</h4><p>若$\{a_n\}$单调递增且有上界，则数列收敛，递减类似</p><p>e.g. 2.4.3</p><font color="red">不要忘记stolz定理啊</font><h4 id="引理-Bernoulli-不等式"><a href="#引理-Bernoulli-不等式" class="headerlink" title="引理 Bernoulli 不等式"></a>引理 Bernoulli 不等式</h4><p>对任意的$x&gt;1, x\neq 0, n\ge 2, (1+x) ^ n &gt; 1 + nx$</p><p>e.g. 2.4.4</p><p>$\lim_{n\rightarrow\infty}{1 + \frac{1}{2} + \frac{1}{3} + \cdots + \frac{1}{n} - \ln n} = \gamma$欧拉常数，0.57721566…</p><h4 id="定理2-4-2"><a href="#定理2-4-2" class="headerlink" title="定理2.4.2"></a>定理2.4.2</h4><ol><li>若单调数列有一个子列收敛，则这个数列收敛</li><li>若单调数列有一个子列趋于$\infty$，则数列也趋于$\infty$</li><li>一个单调数列有么极限存在，有么趋于无穷</li><li>单调数列收敛的充要条件是数列有界</li></ol><h2 id="2-5-实数连续性的基本定理"><a href="#2-5-实数连续性的基本定理" class="headerlink" title="2.5 实数连续性的基本定理"></a>2.5 实数连续性的基本定理</h2><h4 id="定理2-5-1-闭区间套定理"><a href="#定理2-5-1-闭区间套定理" class="headerlink" title="定理2.5.1 闭区间套定理"></a>定理2.5.1 闭区间套定理</h4><p>设$I_n=[a_n,b_n]$为一列闭区间，满足：</p><ol><li>$I_1 \supset I_2 \supset \cdots \supset I_n \supset \cdots $</li><li>这些闭区间的长度满足$\lim_{n\rightarrow\infty}{|I_n|} = \lim_{n\rightarrow\infty}{b_n-a_n}=0$则存在唯一的点$\xi \in  \bigcap_{i=1}^{\infty}I_i$</li></ol><p>通常满足条件1的一列闭区间是一个闭区间套</p><h4 id="定理2-5-2-列紧性定理"><a href="#定理2-5-2-列紧性定理" class="headerlink" title="定理2.5.2 列紧性定理"></a>定理2.5.2 列紧性定理</h4><p>任何有界的无穷数列中都存在收敛的子列</p><h4 id="定义2-5-1-基本列定义"><a href="#定义2-5-1-基本列定义" class="headerlink" title="定义2.5.1 基本列定义"></a>定义2.5.1 基本列定义</h4><p>给定$\{a_n\}$，若满足：$\forall \epsilon &gt; 0, \exists N, s.t. \forall n,m &gt; N, |a_m - a_n| &lt; \epsilon$则称$\{a_n\}$为一个基本列（Cauchy列），这里的N仅与$\epsilon$有关</p><p>等价定义m=n+p的形式，对于一切$p\in N^*$成立</p><h4 id="定理2-5-3-数列极限的Cauchy收敛原理"><a href="#定理2-5-3-数列极限的Cauchy收敛原理" class="headerlink" title="定理2.5.3 数列极限的Cauchy收敛原理"></a>定理2.5.3 数列极限的Cauchy收敛原理</h4><p>$\{a_n\}$收敛的充要条件是$\{a_n\}$是基本列</p><h4 id="定义2-5-2"><a href="#定义2-5-2" class="headerlink" title="定义2.5.2"></a>定义2.5.2</h4><p>设E是实数集，$\aleph=\{I_\lambda|\lambda\in\Delta\}$是一个开区间族，其中$\Delta$是一个指标集，如果$E\subset\bigcup_{\lambda\in\Delta}I_\lambda$则称，$\aleph$覆盖了E，或者说是一个开覆盖</p><h4 id="定理2-5-4-Heine-Borel定理"><a href="#定理2-5-4-Heine-Borel定理" class="headerlink" title="定理2.5.4 Heine-Borel定理"></a>定理2.5.4 Heine-Borel定理</h4><p>设$\aleph=\{I_\lambda|\lambda\in\Delta\}$为有限闭区间[a,b]任意一个开覆盖，则可从$\aleph=\{I_\lambda|\lambda\in\Delta\}$中选出有限个开区间构成[a,b]的覆盖</p><h2 id="2-6-上极限与下极限的概念和性质"><a href="#2-6-上极限与下极限的概念和性质" class="headerlink" title="2.6 上极限与下极限的概念和性质"></a>2.6 上极限与下极限的概念和性质</h2><h4 id="定义2-6-1"><a href="#定义2-6-1" class="headerlink" title="定义2.6.1"></a>定义2.6.1</h4><p>设$\{a_n\}$是一个有界数列，令</p><script type="math/tex; mode=display">\overline{a_n} = sup_{k \ge n}\{a_k\} = sup\{a_n,a_{n+1}, \cdots, \} \\\underline{a_n} = inf_{k \ge n}\{a_k\} = inf\{a_n,a_{n+1}, \cdots, \}</script><p>上数列和下数列</p><h4 id="定义2-6-2"><a href="#定义2-6-2" class="headerlink" title="定义2.6.2"></a>定义2.6.2</h4><p>设$\{a_n\}$是一个有界数列，则称$\lim_{n\rightarrow\infty}\overline{a_n}$为$\{a_n\}$上极限，反之下极限</p><h4 id="定理2-6-1"><a href="#定理2-6-1" class="headerlink" title="定理2.6.1"></a>定理2.6.1</h4><p>设$\{a_n\}$是一个有界数列，则数列$\{a_n\}$收敛充要条件是极限等于上极限等于下极限</p><h4 id="定理2-6-2"><a href="#定理2-6-2" class="headerlink" title="定理2.6.2"></a>定理2.6.2</h4><p>设$\{a_n\}$$\{b_n\}$是有界数列，若存在$N\in N^*,s.t. n&gt;N时 a_n\le b_n，则n&gt;N时，a_n\le b_n,\overline{a_n} \le \overline{b_n}$</p><h4 id="定理2-6-3"><a href="#定理2-6-3" class="headerlink" title="定理2.6.3"></a>定理2.6.3</h4><p>设$\{a_n\}$有界</p><ol><li>对任意的$M &gt; \overline{\lim_{n\rightarrow\infty}}{a_n}$，都存在$N\in N^*, s.t. n&gt; N 时 a_n&lt;M$</li><li>对任意的$m &lt; \underline{\lim_{n\rightarrow\infty}}{a_n}$，都存在$N\in N^*, s.t. n&gt; N 时 a_n&gt;m$</li></ol><h4 id="定理2-6-4"><a href="#定理2-6-4" class="headerlink" title="定理2.6.4"></a>定理2.6.4</h4>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 数学 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>cpp学习日志</title>
      <link href="/2023/09/23/cpp%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/23/cpp%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<blockquote><p>参考主教程：<a href="https://light-city.github.io/">C++那些事 (light-city.github.io)</a></p></blockquote><h2 id="基础进阶部分"><a href="#基础进阶部分" class="headerlink" title="基础进阶部分"></a>基础进阶部分</h2><h3 id="const那些事"><a href="#const那些事" class="headerlink" title="const那些事"></a>const那些事</h3><ol><li><p>含义：const说明的类型叫做常类型，常类型的变量或对象的值是不能被更新的</p></li><li><p>作用：</p><ol><li><p>可以定义常量</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> a = <span class="number">100</span>;</span><br></pre></td></tr></table></figure></li><li><p>类型检查</p><p>const常量与#define宏定义的常量区别： const 常量具有类型，编译器可以进行安全检查；#define宏定义没有数据类型，知识简单的字符串替换，不能进行安全检查。</p><p><code>const</code>定义的变量只有类型为整数或枚举，且以常量表达式初始化时才能作为常量表达式。</p></li><li><p>防止修改，起保护作用，加强Robustness</p></li><li><p>节省空间，避免不必要的内存分配</p><p>const只是给出了对应的内存地址，而不是像#define一样给出的立即数，const在程序运行过程中一份copy，而#define有若干个copy</p></li></ol></li><li><p>const对象默认为文件局部变量</p><font color="red">非const变量默认为extern， 要使const变量能够在其他文件中访问，必须在文件中显性指定它为extern</font></li><li><p>定义常量</p><ol><li>常量不可更改</li><li>常量必须初始化</li></ol></li><li><p>指针与const</p><ol><li><p>四种相关的const</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> *a;  <span class="comment">//指向const对象的指针或者说指向常量的指针</span></span><br><span class="line"><span class="type">char</span> <span class="type">const</span> *a; <span class="comment">//同上</span></span><br><span class="line"><span class="type">char</span> * <span class="type">const</span> a; <span class="comment">//指向类型对象的const指针，或者说常指针、const指针</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span> * <span class="type">const</span> a; <span class="comment">//指向const对象的const指针</span></span><br></pre></td></tr></table></figure><p><strong>允许把非const对象的地址赋给指向const对象的指针</strong></p><p>这时无法通过该指针来修改变量的值，即使指向的是非const对象，也不能通过<code>void *</code> 指针来保存const对象的地址，必须使用从const void * 类型的指针保存const对象的地址</p></li><li><p>常指针</p><p>const指针必须初始化，且指针的值不能修改</p></li><li><p>指向常量的常指针</p></li></ol></li><li><p>函数中使用const</p><ol><li><blockquote><p>const 修饰函数返回值</p></blockquote><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">const</span> <span class="type">int</span> * <span class="title">func</span><span class="params">()</span> <span class="comment">// 指针所指不可变</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> *<span class="type">const</span> <span class="title">func</span><span class="params">()</span> <span class="comment">//指针不可变</span></span></span><br></pre></td></tr></table></figure><ol><li><blockquote><p>const 修饰函数参数</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">void func(const int var) // 传递过来的参数不可变</span><br><span class="line">void func(int *const var) //指针不可变7</span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><p>​    7. 类中使用const</p><p>​            </p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> C++学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>数据库第三周学习日志</title>
      <link href="/2023/09/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/22/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="第一章-绪论"><a href="#第一章-绪论" class="headerlink" title="第一章 绪论"></a>第一章 绪论</h1><h2 id="1-1-数据库系统概述"><a href="#1-1-数据库系统概述" class="headerlink" title="1.1 数据库系统概述"></a>1.1 数据库系统概述</h2><p>数据库是一种计算机辅助管理数据的方法与技术，研究如何有效地<strong>组织和存储数据</strong>，如何高效地<strong>获取和处理数据</strong></p><h3 id="1-1-1-数据库的4个基本概念"><a href="#1-1-1-数据库的4个基本概念" class="headerlink" title="1.1.1 数据库的4个基本概念"></a>1.1.1 数据库的4个基本概念</h3><h4 id="①-数据-Data"><a href="#①-数据-Data" class="headerlink" title="① 数据 Data"></a>① 数据 Data</h4><p>数据是数据库中存储的基本对象</p><h5 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a><strong>Definition</strong></h5><p>是描述事物的符号记录，是可识别的、抽象的符号</p><h5 id="Categories"><a href="#Categories" class="headerlink" title="Categories"></a><strong>Categories</strong></h5><ul><li><p>结构化</p><ul><li><p>可以使用关系型数据库表示和存储，表现为规范的二维表格形式的数据</p></li><li><blockquote><person><name>A</name><age>13</age></person></blockquote></li></ul></li><li><p>半结构化</p><ul><li><p>结构化数据的一种形式，并不符合关系数据模型结构，但包括相关标记来分割语义元素，并对记录和字段进行分层</p></li><li><p>自描述的结构</p></li><li><blockquote><p>XML、JSON格式数据</p></blockquote></li></ul></li><li><p>非结构化</p><ul><li>文档、图片、视频等</li></ul></li></ul><h5 id="Another-definition"><a href="#Another-definition" class="headerlink" title="Another definition"></a><strong>Another definition</strong></h5><p>​    使用约定俗成的关键字，对客观事物的数量、属性、状态、位置及其相互关系进行抽象表示，以适合在特定领域中用人工或自然的方式进行保存、传递和处理。</p><h5 id="信息"><a href="#信息" class="headerlink" title="信息"></a>信息</h5><p><strong>Definition</strong></p><ul><li>具有<strong>时效性</strong>，有一定含义的，有逻辑的、经过<strong>加工处理</strong>的、对决策有价值的<strong>数据流</strong>。</li><li><strong>信息 = 数据 + 处理</strong></li></ul><h5 id="数据与信息"><a href="#数据与信息" class="headerlink" title="数据与信息"></a>数据与信息</h5><ul><li>数据是信息的符号表示，或称载体；</li><li>信息是数据的内涵，是数据的语义解释；</li><li><strong>数据是符号化的信息</strong></li><li><strong>信息是语义化的数据</strong></li></ul><h5 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h5><p><strong>Definition</strong></p><ul><li>对消息进行<strong>归纳、演绎、比较</strong>等手段进行挖掘，使其有价值的部分沉淀下来，并于现存的人类知识体系相结合，有价值的信息就转变为知识。</li><li>知识是从<strong>定量到定性</strong>的过程得以实现的、抽象的、逻辑的东西。</li><li>知识在数据与信息之上，因它更接近行动，与决策有关。</li></ul><h5 id="数据挖掘"><a href="#数据挖掘" class="headerlink" title="数据挖掘"></a>数据挖掘</h5><ul><li>从大量、不完全的、有噪声的、随机的、模糊的实际应用数据中提取有用信息和知识的过程</li><li>常用算法<ul><li>分类、聚类、回归、关联规则</li><li>异常检测、特征分析、变化和偏差分析</li></ul></li></ul><h4 id="②-数据库"><a href="#②-数据库" class="headerlink" title="② 数据库"></a>② 数据库</h4><p><strong>Definition</strong></p><p>长期<strong>存储在计算机内</strong>、<strong>有组织的</strong>、<strong>可共享</strong>的大量<strong>数据的集合</strong></p><p><strong>基本特征</strong></p><ul><li>数据按一定的<strong>数据模型</strong> <em>组织、描述和储存</em></li><li>可为各种<em>用户</em> <strong>共享</strong></li><li><strong>冗余度较小</strong></li><li><strong>数据独立性较高</strong></li><li>易扩展</li></ul><h4 id="③-数据库管理系统"><a href="#③-数据库管理系统" class="headerlink" title="③ 数据库管理系统"></a>③ 数据库管理系统</h4><p><strong>Definition</strong></p><ul><li>用户与操作系统之间的一层数据管理软件</li><li>帮助用户<strong>定义、创建、维护、控制</strong>数据库访问的<em>软件系统</em></li><li>基础软件</li></ul><p><strong>用途</strong></p><ul><li>科学地<strong>组织和存储</strong>数据</li><li>高效地<strong>获取和维护</strong>数据</li></ul><p><strong>主要功能</strong></p><ul><li><strong>数据定义</strong>功能<ul><li>提供数据定义语言（DDL）</li><li>定义数据库中的数据对象</li></ul></li><li>数据<strong>组织、存储和管理</strong><ul><li><strong>分类</strong>组织、存储和管理各种数据</li><li><strong>确定</strong>组织数据的<strong>文件结构和存取方式</strong></li><li>实现数据之间的联系</li><li>提供<strong>多种存取方式提高存取效率</strong></li></ul></li><li><strong>数据操纵</strong>功能<ul><li>提供数据操纵语言（DML）</li><li>实现对数据库的基本操作：增删改查</li></ul></li><li>数据库的<strong>事务管理和运行管理</strong><ul><li>数据库在建立、运行和维护时，由<strong>DBMS统一管理和控制</strong></li><li>保证数据的<strong>安全性、完整性</strong>；支持多用户对数据的<strong>并发使用</strong></li><li>发生故障后的<strong>系统数据恢复</strong>（自动、手动）</li></ul></li><li>数据库的<strong>建立和维护功能</strong><ul><li>数据库初始化：初始数据的装载和转换</li><li>数据库备份、转储、恢复功能</li><li>数据库的重组织</li><li>性能监控等</li></ul></li><li>其他功能</li></ul><h4 id="④-数据库系统"><a href="#④-数据库系统" class="headerlink" title="④ 数据库系统"></a>④ 数据库系统</h4><p>Database System, DBS</p><p><strong>系统构成</strong></p><ul><li>数据库</li><li>DBMS</li><li>Application</li><li>DB Administrator</li></ul><p><strong>常见管理信息系统</strong>（MIS）架构</p><ul><li>Client/Server(C/S)架构<ul><li>通常是2层架构</li><li>胖客户端</li></ul></li><li>Browser/Server(B/S)架构<ul><li>典型三层架构</li><li>瘦客户端</li></ul></li></ul><p>架构的分层目的</p><ul><li>Flexibility：灵活</li><li>Maintainability：可维护</li><li>Reusability：可重用</li><li>Scalability：可扩展性</li></ul><p>Layer：逻辑功能分层，上下层之间由接口支撑关系</p><p>Tier：Layer的物理实现，可独立物理部署，一个Tier可包括多个Layer</p><p><strong>数据库系统特点</strong></p><ol><li><strong>数据结构化</strong><ul><li><strong>数据库的整体结构化</strong>是数据库的主要特征之一</li><li><strong>数据用数据模型描述</strong>，无需应用程序定义</li></ul></li><li>数据的<strong>共享性高，冗余度低</strong>且易扩充</li><li><strong>数据独立性高</strong><ul><li>物理独立性</li><li>逻辑独立性</li><li>数据独立性由DBMS的二级映像功能保证</li></ul></li><li>数据由DBMS<strong>统一管理和控制</strong><ul><li>数据控制功能<ul><li>安全性保护</li><li>完整性检查</li><li>并发控制</li><li>数据库恢复</li></ul></li></ul></li></ol><h2 id="1-2-数据模型"><a href="#1-2-数据模型" class="headerlink" title="1.2 数据模型"></a>1.2 数据模型</h2><ul><li><strong>对现实世界数据特征的抽象</strong></li><li>应满足三方面要求<ul><li>能比较<strong>真实地模拟现实世界</strong></li><li>容易为人所理解</li><li>便于在<strong>计算机上实现</strong></li></ul></li><li>是数据库系统的<strong>核心和基础</strong></li></ul><h3 id="1-2-1-两大类数据模型"><a href="#1-2-1-两大类数据模型" class="headerlink" title="1.2.1 两大类数据模型"></a>1.2.1 两大类数据模型</h3><p>数据模型分为两类</p><ol><li><strong>概念模型</strong><ul><li>信息模型，它是按<strong>用户的观点</strong>来对数据和信息建模</li></ul></li><li><strong>逻辑模型和物理模型</strong><ul><li>逻辑模型是按<strong>计算机的观点</strong>对数据建模，建立的是具体应用的数据库结构，用于DBMS实现，但不依赖具体的数据库软件厂商和版本。主要包括网状模型、层次模型、关系模型、面向对象数据模型、对象关系数据模型、半结构化数据模型。</li><li>物理模型是<strong>对数据最底层的抽象</strong>，数据在系统内部的表示方法和存取方法，在磁盘或磁带上的存储方式和存取方法。</li></ul></li></ol><p>客观对象的抽象过程-<strong>两部抽象</strong></p><ol><li>将客观对象抽象成概念模型</li><li>将概念模型转换为某一数据库管理系统支持的数据模型</li></ol><p>数据建模是业务需求理解和概念抽象的过程</p><p>抽象过程：<strong>理解-区分-命名-表达</strong></p><p>数据建模的三个层次/阶段：</p><ol><li>概念模型</li><li>逻辑建模</li><li>物理建模</li></ol><h3 id="1-2-2-概念模型"><a href="#1-2-2-概念模型" class="headerlink" title="1.2.2 概念模型"></a>1.2.2 概念模型</h3><p><strong>用途</strong></p><ul><li><strong>用于信息世界的建模</strong></li><li><strong>设计人员和用户之间交流的语言</strong></li></ul><p><strong>基本要求</strong></p><ul><li>较强的语义表达能力</li><li>反应<strong>业务</strong>逻辑，<strong>用客户的述语描述</strong></li><li>简单、清晰、<strong>易于用户理解</strong></li></ul><p>概念模型的一种表示方法：</p><ul><li>实体-联系方法<ul><li>用E-R图来描述现实世界的概念模型</li></ul></li></ul><p>基本概念</p><ol><li>实体（Entity）：可以是具体的或抽象的</li><li>属性（Attribute）：某一特性</li><li>码/键（Key）：<strong>唯一标识</strong></li><li>实体型（Entity Type）：用<strong>实体名及其属性名集合来抽象和刻画同类实体</strong></li><li>实体集（Entity Set）：同一类型<strong>实体的集合</strong></li><li>联系（Relationship）：<ul><li>现实世界中事物内部及事物之间的联系反应为class内部的联系和class之间的联系</li><li>class内部的联系通常是指attributes’ relationship</li><li>class之间的联系通常是指Entity Set Realationship</li><li>一对一、一对多、多对多</li></ul></li></ol><h3 id="1-2-3-数据模型的组成要素"><a href="#1-2-3-数据模型的组成要素" class="headerlink" title="1.2.3 数据模型的组成要素"></a>1.2.3 数据模型的组成要素</h3><ul><li>数据结构</li><li>数据操作</li><li>数据的完整性约束条件</li></ul><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><p>数据模型的数据结构：描述数据库的组成对象，以及对象之间的联系，是对<strong>系统静态特性的描述</strong></p><h4 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h4><p>对数据库中各种对象的实例允许执行的操作的集合，<strong>包括操作及有关操作规则</strong></p><p>操作类型：</p><ul><li>查询 Select</li><li>更新<ul><li>插入 Insert</li><li>删除 Delete</li><li>修改 Update</li></ul></li></ul><h4 id="数据完整性约束条件"><a href="#数据完整性约束条件" class="headerlink" title="数据完整性约束条件"></a>数据完整性约束条件</h4><ul><li>一组完整性规则的集合</li><li>完整性规则：给定的数据模型中<strong>数据及其联系</strong>所具有的制约和依存关系</li><li>用以限定符合数据模型的数据库状态及其状态的变化，以保证数据的<strong>正确、有效和相容</strong></li></ul><p>完整性约束条件的定义：</p><p>规定必须遵守的、<strong>基本的、通用的</strong>完整性约束条件；提供定义完整性约束条件的机制，以反映<strong>具体应用</strong>所设计的数据必须遵守的特定的语义约束条件</p><h3 id="1-2-4-常用的数据模型"><a href="#1-2-4-常用的数据模型" class="headerlink" title="1.2.4 常用的数据模型"></a>1.2.4 常用的数据模型</h3><p>网状模型、层次模型、关系模型、面向对象数据模型、对象关系数据模型、半结构化数据模型。</p><h3 id="1-2-5-层次模型"><a href="#1-2-5-层次模型" class="headerlink" title="1.2.5 层次模型"></a>1.2.5 层次模型</h3><p>树形结构</p><p>结点双亲唯一、一对多的实体联系</p><h3 id="1-2-6-网状模型"><a href="#1-2-6-网状模型" class="headerlink" title="1.2.6 网状模型"></a>1.2.6 网状模型</h3><p>允许一个以上的结点无双亲、一个节点可以有多于一个的双亲</p><h3 id="1-2-7-关系模型"><a href="#1-2-7-关系模型" class="headerlink" title="1.2.7 关系模型"></a>1.2.7 关系模型</h3><p>逻辑结构是一张二维表</p><ul><li>关系 Relation 一个关系对应一张表（包括数据</li><li>元组 Tuple 一行</li><li>属性 Attribute</li><li>主键 Key</li><li>域 Domain 相同数据类型的值的集合</li><li>分量 Component 元组的一个属性值</li><li>关系模式 Relation Schema 对关系的结构描述</li></ul><p>关系必须是规范化的，满足一定的规范条件</p><ul><li>关系的每一个分量必须是一个不可分的数据项，<strong>不允许表中还有表</strong></li></ul><p>数据操作是<strong>集合</strong>操作，操作对象和操作结果都是关系</p><p>关系的完整性约束条件： </p><ol><li>实体完整性</li><li>参照完整性</li><li>用户定义的完整性</li></ol><h3 id="1-3-数据库系统的结构"><a href="#1-3-数据库系统的结构" class="headerlink" title="1.3 数据库系统的结构"></a>1.3 数据库系统的结构</h3><p>从<strong>数据库应用开发人员角度</strong>看，数据库系统通常采用<strong>三级模式结构</strong>，是数据库系统<strong>内部的系统结构</strong></p><p>从数据库<strong>最终用户角度</strong>来看，结构分为</p><ul><li>单用户结构</li><li>分布式结构</li><li>客户-服务器</li><li>浏览器-服务器</li></ul><p>模式 Schema</p><ul><li>逻辑结构和特征的描述</li><li>型的描述</li><li>反映的是数据的结构及其联系</li><li>模式相对稳定</li></ul><p>实例 Instance</p><p>反映数据库某一时刻的状态</p><h4 id="1-3-2-三级模式结构"><a href="#1-3-2-三级模式结构" class="headerlink" title="1.3.2 三级模式结构"></a>1.3.2 三级模式结构</h4><p><strong>模式</strong>（逻辑模式）</p><ul><li>全体数据的逻辑结构和特征的描述</li><li>所有用户的公共数据试图</li></ul><p><strong>一个数据库只有一个模式</strong></p><p>模式：数据库系统模式结构的中间层</p><p>模式的定义</p><ul><li>数据的<strong>逻辑结构</strong></li><li>数据之间的联系</li><li>数据有关的安全性、完整性要求</li></ul><p><strong>外模式</strong></p><ul><li>用户使用的<strong>局部数据的逻辑结构和特征的描述</strong></li><li>数据库用户的数据视图</li><li>介于应用域模式之间</li></ul><p><strong>内模式</strong></p><ul><li>数据物理结构和存储方式的描述</li><li>对用户半透明</li></ul><h4 id="1-3-3-数据库的二级映像功能与数据独立性"><a href="#1-3-3-数据库的二级映像功能与数据独立性" class="headerlink" title="1.3.3 数据库的二级映像功能与数据独立性"></a>1.3.3 数据库的二级映像功能与数据独立性</h4><ul><li>外模式/模式映像<ul><li>保证数据的逻辑独立性</li></ul></li><li>模式/内模式映像<ul><li>定义了数据全局逻辑结构与存储结构之间的对应关系</li><li>唯一</li><li>保证数据的物理独立性</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>自然语言处理第三周学习日志</title>
      <link href="/2023/09/22/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/22/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h2 id="1-1-问题的提出"><a href="#1-1-问题的提出" class="headerlink" title="1.1 问题的提出"></a>1.1 问题的提出</h2><ul><li>信息检索市场前景广阔</li><li>跨语言通信与信息获取</li><li>机器翻译市场需求大</li><li>舆情监测</li></ul><ol><li>如何让计算机实现自动的或人机互助的语言处理功能？</li><li>如何让计算机实现海量语言信息的自动处理、知识挖掘、有效利用？</li></ol><h2 id="1-2-基本概念"><a href="#1-2-基本概念" class="headerlink" title="1.2 基本概念"></a>1.2 基本概念</h2><h4 id="Def-1-1-Language-语言"><a href="#Def-1-1-Language-语言" class="headerlink" title="Def. 1-1 Language 语言"></a>Def. 1-1 Language 语言</h4><p>人类所特有的用来表达意思、交流思想的工具，是一种特殊的社会现象，由<strong>语音</strong>、<strong>词汇</strong>和<strong>语法</strong>构成一定的系统。</p><h4 id="Def-1-2-Linguistics-语言学"><a href="#Def-1-2-Linguistics-语言学" class="headerlink" title="Def. 1-2 Linguistics 语言学"></a>Def. 1-2 Linguistics 语言学</h4><p>对语言的科学研究。</p><p><strong>语音</strong>和<strong>文字</strong>是语言的两个基本属性</p><h4 id="Def-1-3-Phonetics-语音学"><a href="#Def-1-3-Phonetics-语音学" class="headerlink" title="Def. 1-3 Phonetics 语音学"></a>Def. 1-3 Phonetics 语音学</h4><p> 研究人类发音特点，特别是语音发音特点，并提出各种语音描述、分类和转写方法的科学。</p><ul><li>发音语音学 (articulatory phonetics)</li><li>声学语音学 (acoustic phonetics)</li><li>听觉语音学 (auditory phonetics)</li></ul><p>综上可以看出语音学的分支非常广，那便将其视为复数的语言科学 (linguistic sciences)</p><h4 id="Def-1-4-Natural-Language-Understanding-自然语言理解"><a href="#Def-1-4-Natural-Language-Understanding-自然语言理解" class="headerlink" title="Def. 1-4 Natural Language Understanding 自然语言理解"></a>Def. 1-4 Natural Language Understanding 自然语言理解</h4><p>微观上讲， 语言理解是指从自然语言到机器内部之间的一种映射；从宏观上讲，语言理解是指机器能够执行人类所期望的某些语言功能。</p><p>如何判断理解、计算机系统的智能呢？</p><ul><li>表现 act</li><li>反应 react</li><li>相互作用 interact</li><li>Turing Test</li></ul><h4 id="Def-1-5-Natural-Language-Processing-自然语言处理"><a href="#Def-1-5-Natural-Language-Processing-自然语言处理" class="headerlink" title="Def. 1-5 Natural Language Processing 自然语言处理"></a>Def. 1-5 Natural Language Processing 自然语言处理</h4><p>研制表示语言能力 (linguistic competence) 和语言应用 (linguistic performance)的模型，建立计算框架来实现这样的语言模型，提出相应的方法来不断地完善语言模型，设计使用系统，并探讨测评技术。</p><h4 id="Def-1-6-Computational-Linguistics-计算语言学"><a href="#Def-1-6-Computational-Linguistics-计算语言学" class="headerlink" title="Def. 1-6: Computational Linguistics 计算语言学"></a>Def. 1-6: Computational Linguistics 计算语言学</h4><p>用计算技术和概念来阐述语言学和语音学问题。</p><h4 id="三个不同的语系"><a href="#三个不同的语系" class="headerlink" title="三个不同的语系"></a>三个不同的语系</h4><ol><li>屈折语 fusional language / inflectional language, 用词的形态变化表示语法关系，英语、法语等</li><li>黏着语 agglutinative language 专门表示语法意义的附加成分， 日语等</li><li>孤立语/分析语 isolating / analytic language 形态变化少，语法关系靠语序和虚词表示，汉语</li></ol><h2 id="1-3-NLP-的产生与发展"><a href="#1-3-NLP-的产生与发展" class="headerlink" title="1.3 NLP 的产生与发展"></a>1.3 NLP 的产生与发展</h2><p>源于机器翻译 (Machine Translation, MT)</p><h2 id="1-4-研究内容"><a href="#1-4-研究内容" class="headerlink" title="1.4 研究内容"></a>1.4 研究内容</h2><p>按应用目标划分，广义上包括</p><ol><li>机器翻译 (Machine translation, MT)</li><li>信息检索 (Information retrieval)</li><li>自动文摘 (Automatic summarization/ Automatic abstracting)</li><li>问答系统 (Question-answering system)</li><li>信息过滤 (Information filtering)</li><li>信息抽取 (Information extraction)</li><li>文档分类 (Document categorization)</li><li>情感分类 (Sentimental classification)</li><li>文字编辑和自动校对 (Automatic proofreading)</li><li>语音教学 (Language teaching)</li><li>文字识别 (Character recognition)</li><li>语音识别 (automatic speech recognition, ASR)</li><li>文语转换/语音合成 (text-to-speech synthesis)</li><li>说话人识别/认同/验证 (speaker recognition/ identification/ verification)</li></ol><h2 id="1-5-基本问题和主要困难"><a href="#1-5-基本问题和主要困难" class="headerlink" title="1.5 基本问题和主要困难"></a>1.5 基本问题和主要困难</h2><h3 id="基本问题一：形态学问题-Morphology-Problem"><a href="#基本问题一：形态学问题-Morphology-Problem" class="headerlink" title="基本问题一：形态学问题(Morphology Problem)"></a>基本问题一：形态学问题(Morphology Problem)</h3><p>word由有意义的词素 morphemes 构成，包括屈折变化和构词法两部分</p><h3 id="基本问题二：语法学问题-Syntax-Problem"><a href="#基本问题二：语法学问题-Syntax-Problem" class="headerlink" title="基本问题二：语法学问题 (Syntax Problem)"></a>基本问题二：语法学问题 (Syntax Problem)</h3><h3 id="基本问题三：-语义学问题-Semantics-Problem"><a href="#基本问题三：-语义学问题-Semantics-Problem" class="headerlink" title="基本问题三： 语义学问题 (Semantics Problem)"></a>基本问题三： 语义学问题 (Semantics Problem)</h3><h3 id="基本问题四：语用学问题-Pragmatics-Problem"><a href="#基本问题四：语用学问题-Pragmatics-Problem" class="headerlink" title="基本问题四：语用学问题 (Pragmatics Problem)"></a>基本问题四：语用学问题 (Pragmatics Problem)</h3><h3 id="基本问题五：-语音学问题-Phonetics-Problem"><a href="#基本问题五：-语音学问题-Phonetics-Problem" class="headerlink" title="基本问题五： 语音学问题 (Phonetics Problem)"></a>基本问题五： 语音学问题 (Phonetics Problem)</h3><h3 id="困难一：大量歧义现象-ambiguity"><a href="#困难一：大量歧义现象-ambiguity" class="headerlink" title="困难一：大量歧义现象 (ambiguity)"></a>困难一：大量歧义现象 (ambiguity)</h3><ul><li>词法歧义</li><li>词性歧义</li><li>结构歧义</li><li>语义歧义</li><li>语音歧义</li><li>多音字及韵律等歧义</li></ul><h3 id="困难二：大量未知语言现象"><a href="#困难二：大量未知语言现象" class="headerlink" title="困难二：大量未知语言现象"></a>困难二：大量未知语言现象</h3><ul><li>新词、人名、地名、术语</li><li>新含义</li><li>新用法、句型</li></ul><h2 id="1-6-基本研究方法"><a href="#1-6-基本研究方法" class="headerlink" title="1.6 基本研究方法"></a>1.6 基本研究方法</h2><h3 id="理性主义"><a href="#理性主义" class="headerlink" title="理性主义"></a>理性主义</h3><p>语言知识来源：语言知识很大部分是由遗传决定的。</p><p>研究对象：语言知识结构</p><p>理论：基于Chomsky语言原则，通过语言所必须遵守的原则来描述语言</p><p>处理方法：特殊语句或语法现象</p><p>求解方法：基于规则的分析方法，建立符号处理系统</p><h3 id="经验主义"><a href="#经验主义" class="headerlink" title="经验主义"></a>经验主义</h3><p>语言知识来源：语言知识是通过感官输入，经过简单联想与通用化的操作而得到的</p><p>研究对象：实际的语言数据</p><p>理论：信息论</p><p>处理方法：统计</p><p>求解方法：基于大规模真实语料的计算方法</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 自然语言处理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>weblog</title>
      <link href="/2023/09/22/weblog/"/>
      <url>/2023/09/22/weblog/</url>
      
        <content type="html"><![CDATA[<h2 id="Q1：hexo-next-主题下博客中数学公式无法正常渲染"><a href="#Q1：hexo-next-主题下博客中数学公式无法正常渲染" class="headerlink" title="Q1：hexo next 主题下博客中数学公式无法正常渲染"></a>Q1：hexo next 主题下博客中数学公式无法正常渲染</h2><p>参考教程：<a href="https://blog.csdn.net/yexiaohhjk/article/details/82526604">https://blog.csdn.net/yexiaohhjk/article/details/82526604</a></p><h2 id="Q2：hexo-下的分类和表签无法显示，怎么解决？"><a href="#Q2：hexo-下的分类和表签无法显示，怎么解决？" class="headerlink" title="Q2：hexo 下的分类和表签无法显示，怎么解决？"></a>Q2：hexo 下的分类和表签无法显示，怎么解决？</h2><p>参考教程：<a href="https://www.zhihu.com/question/29017171">https://www.zhihu.com/question/29017171</a></p><h2 id="Q3：-hexo-添加后台管理功能"><a href="#Q3：-hexo-添加后台管理功能" class="headerlink" title="Q3： hexo 添加后台管理功能"></a>Q3： hexo 添加后台管理功能</h2><p>参考教程：<a href="https://blog.csdn.net/smileyan9/article/details/86666824">https://blog.csdn.net/smileyan9/article/details/86666824</a></p><h2 id="Q4：解决hexo图片无法导入问题"><a href="#Q4：解决hexo图片无法导入问题" class="headerlink" title="Q4：解决hexo图片无法导入问题"></a>Q4：解决hexo图片无法导入问题</h2><p>参考教程：<a href="https://blog.csdn.net/weixin_42030522/article/details/123075824">解决Hexo无法显示图片的几种方案_hexo 图片-CSDN博客</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 博客开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>可证明安全第三周学习日志</title>
      <link href="/2023/09/21/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/"/>
      <url>/2023/09/21/%E5%8F%AF%E8%AF%81%E6%98%8E%E5%AE%89%E5%85%A8%E7%AC%AC%E4%B8%89%E5%91%A8%E5%AD%A6%E4%B9%A0%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h2 id="Principles-of-Modern-Crypto"><a href="#Principles-of-Modern-Crypto" class="headerlink" title="Principles of Modern Crypto"></a>Principles of Modern Crypto</h2><h3 id="A-Formal-definitions"><a href="#A-Formal-definitions" class="headerlink" title="A. Formal definitions"></a>A. Formal definitions</h3><blockquote><p>Precise, mathematical model and definition of what security means</p></blockquote><p>Definitions are essential for the design, analysis, and usage of crypto.</p><ul><li>Design: force the designer to think about what they really want.</li><li>Analysis: enable meaningful analysis, evaluation, and comparison of schemes</li><li>Usage: understand the security guarantees, modularity, substitute.</li></ul><h3 id="B-Assumptions"><a href="#B-Assumptions" class="headerlink" title="B. Assumptions"></a>B. Assumptions</h3><blockquote><p>Clearly stated and unambiguous</p></blockquote><p><strong>Computational assumptions</strong></p><p>Principle: any such assumptions should be made explicit</p><ul><li>validate assumptions</li><li>meaningful comparison</li><li>practical implications</li></ul><h3 id="C-Proof-of-security"><a href="#C-Proof-of-security" class="headerlink" title="C. Proof of security"></a>C. Proof of security</h3><blockquote><p>Move away from design-break-patch</p></blockquote><h2 id="Defining-Secure-Encryption"><a href="#Defining-Secure-Encryption" class="headerlink" title="Defining Secure Encryption"></a>Defining Secure Encryption</h2><p>Crypto definitions (generally)</p><ul><li>Security guarantee/goal</li><li>Threat model<ul><li>ciphertext-only attack</li><li>known-plaintext attack</li><li>chosen-plaintext attack</li><li>chosen-ciphertext attack</li></ul></li></ul><h2 id="Perfect-Secrecy"><a href="#Perfect-Secrecy" class="headerlink" title="Perfect Secrecy"></a>Perfect Secrecy</h2><h3 id="Informal-def"><a href="#Informal-def" class="headerlink" title="Informal def."></a>Informal def.</h3><p>Regardless of any prior information the attacker has about the plaintext, the ciphertext should leak no additional information about the plaintext.</p><h3 id="Basic-concepts"><a href="#Basic-concepts" class="headerlink" title="Basic concepts"></a>Basic concepts</h3><ul><li>Random variable (r.v.)</li><li>Event</li><li>Conditional probability</li><li>Law of total probability</li><li>$\mathcal{M}$ is plaintext space, $\mathcal{K}$ is key space, $\mathcal{C}$ is ciphertext space</li></ul><h3 id="Probability-distributions"><a href="#Probability-distributions" class="headerlink" title="Probability distributions"></a>Probability distributions</h3><p>characterize the probability distributions over key space</p><ul><li>r.v. M and K are independent</li></ul><script type="math/tex; mode=display">\ Encryption \ scheme \ with  \ \mathcal{M}  \ and \  \mathcal{C}, if \ for \ every \ distribution \ over \mathcal{M}, \\every \ m \in \mathcal{M}, and \ every \ c \in \mathcal{C}  \ with \  Pr[C=c] > 0, \  it \ holds \ that\\ Pr[M = m | C = c] = Pr[M = m]</script><h3 id="Equivalent-Def"><a href="#Equivalent-Def" class="headerlink" title="Equivalent Def"></a>Equivalent Def</h3><script type="math/tex; mode=display">Pr[M=m | C=c ] = Pr[M=m]</script><script type="math/tex; mode=display">Pr[C=c | M=m] = Pr[C=c | M = m^{'}], \ i.e. \\Pr[Enc_K(m) = c] = Pr[Enc_K(m^{'}) = c]</script><script type="math/tex; mode=display">Pr[C=c | M=m] = Pr[C=c]</script><p><a href="https://www.cnblogs.com/TheFutureIsNow/p/11527610.html">密码学基础(二) - 完美保密 - Hang3 - 博客园 (cnblogs.com)</a></p><p>Perfectly secret and perfectly indistinguishable:</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> 可证明安全 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>你好，世界！</title>
      <link href="/2023/09/21/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%96%E7%95%8C%EF%BC%81/"/>
      <url>/2023/09/21/%E4%BD%A0%E5%A5%BD%EF%BC%8C%E4%B8%96%E7%95%8C%EF%BC%81/</url>
      
        <content type="html"><![CDATA[<p>这是我的<strong>第一篇</strong>博客，听说写一个独属于自己的博客最需要的便是坚持，而我相信我能行！</p><h2 id="本站简介"><a href="#本站简介" class="headerlink" title="本站简介"></a>本站简介</h2><p>我给我的网站起的名字叫暖火，想要表达的意思是向四周传播自己的光与热，我给我的网站定位是一个学习内容记录的学习性博客，在这里我会定期更新所有在学校学习内容的整理，一方面是作为复习，另一方面也是能够造福于大家，作为经常玩盗版游戏的我来说，开源精神弥足珍贵啦，哈哈。</p><p>我的文学素养有限，专业能力也在萌芽阶段，这篇hello,world一定不会是最终稿的，哈啊，我会再慢慢修改，让他更充实一点！</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
